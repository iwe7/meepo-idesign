{"version":3,"file":"meepo-idesign-share.js","sources":["ts/meepo-idesign-share.ts","ts/design-share.module.ts","ts/components/public_api.ts","ts/components/position/position.ts","ts/components/swiper/swiper.ts","ts/components/border/border.ts","ts/components/padding/padding.ts","ts/components/margin/margin.ts","ts/components/background/background.ts","ts/components/size/size.ts","ts/components/color/color.ts","ts/components/base.ts","ts/ng-component.ts","ts/types.ts","ts/guid.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {IDesignComponentModule,NgComponentDirective,DesignLibraryProp,DesignHistoryProp,DesignApiService,DesignLibraryService,DESIGN_LIBRARYS,DesignPropsService,DESIGN_COMPONENTS,guid} from './public_api';\n\nexport {ShareBackgroundComponent as ɵf} from './components/background/background';\nexport {ControlBase as ɵd} from './components/base';\nexport {ShareBorderComponent as ɵj} from './components/border/border';\nexport {ShareColorComponent as ɵc} from './components/color/color';\nexport {ShareMarginComponent as ɵg} from './components/margin/margin';\nexport {SharePaddingComponent as ɵh} from './components/padding/padding';\nexport {SharePositionComponent as ɵi} from './components/position/position';\nexport {shareComponents as ɵb} from './components/public_api';\nexport {ShareSizeComponent as ɵe} from './components/size/size';\nexport {ShareSwiperComponent as ɵk} from './components/swiper/swiper';\nexport {DRAG_DROP_ALL as ɵa} from './ng-component';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgComponentDirective, DRAG_DROP_ALL } from './ng-component';\nimport { DESIGN_LIBRARYS, DesignLibraryService, DesignApiService, DesignPropsService } from './types';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { shareComponents } from './components/public_api';\nexport class IDesignComponentModule {\n/**\n * @param {?} coms\n * @param {?=} dragDropAll\n * @return {?}\n */\npublic static forRoot(coms: any, dragDropAll: boolean = false): ModuleWithProviders {\n        return {\n            ngModule: IDesignComponentModule,\n            providers: [{\n                provide: DESIGN_LIBRARYS,\n                useValue: coms,\n                multi: true\n            },{\n                provide: DRAG_DROP_ALL,\n                useValue: dragDropAll\n            }]\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        NgComponentDirective,\n        ...shareComponents\n    ],\n    declarations: [\n        NgComponentDirective,\n        ...shareComponents\n    ],\n    providers: [\n        DesignApiService,\n        DesignLibraryService,\n        DesignPropsService\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ShareColorComponent } from './color/color';\nimport { ShareSizeComponent } from './size/size';\nimport { ShareBackgroundComponent } from './background/background';\nimport { ShareMarginComponent } from './margin/margin';\nimport { SharePaddingComponent } from './padding/padding';\nimport { ShareBorderComponent } from './border/border';\nimport { ShareSwiperComponent } from './swiper/swiper';\n\n\n\nimport { SharePositionComponent } from './position/position';\n\nexport const /** @type {?} */ shareComponents = [\n    ShareColorComponent,\n    ShareSizeComponent,\n    ShareBackgroundComponent,\n    ShareMarginComponent,\n    SharePaddingComponent,\n    SharePositionComponent,\n    ShareBorderComponent,\n    ShareSwiperComponent\n];\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ControlBase } from '../base';\nexport class SharePositionComponent extends ControlBase implements OnInit {\n    _noup: boolean = false;\n/**\n * @param {?} val\n * @return {?}\n */\nset noup(val) {\n        this._noup = true;\n    }\n    _nodown: boolean = false;\n/**\n * @param {?} val\n * @return {?}\n */\nset nodown(val) {\n        this._nodown = true;\n    }\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl('position', 'relative');\n        this.checkControl('left.px', '0');\n        this.checkControl('right.px', '0');\n        if (!this._noup) {\n            this.checkControl('top.px', '0');\n        }\n        if (!this._nodown) {\n            this.checkControl('bottom.px', '0');\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-position',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n              <h1>\n                  定位\n              </h1>\n              <div class=\"setting-row-input\" *ngIf=\"!_noup\">\n                  <div class=\"setting-row-input-label\">\n                      上:\n                  </div>\n                  <div class=\"setting-row-input-content\">\n                      <input type=\"number\" formControlName=\"top.px\">\n                  </div>\n                  <span class=\"setting-row-input-unit\">px</span>\n              </div>\n              <div class=\"setting-row-input\">\n                  <div class=\"setting-row-input-label\">\n                      右:\n                  </div>\n                  <div class=\"setting-row-input-content\">\n                      <input type=\"number\" formControlName=\"right.px\">\n                  </div>\n                  <span class=\"setting-row-input-unit\">px</span>\n              </div>\n              <div class=\"setting-row-input\" *ngIf=\"!_nodown\">\n                  <div class=\"setting-row-input-label\">\n                      下:\n                  </div>\n                  <div class=\"setting-row-input-content\">\n                      <input type=\"number\" formControlName=\"bottom.px\">\n                  </div>\n                  <span class=\"setting-row-input-unit\">px</span>\n              </div>\n              <div class=\"setting-row-input\">\n                  <div class=\"setting-row-input-label\">\n                      左:\n                  </div>\n                  <div class=\"setting-row-input-content\">\n                      <input type=\"number\" formControlName=\"left.px\">\n                  </div>\n                  <span class=\"setting-row-input-unit\">px</span>\n              </div>\n          </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'noup': [{ type: Input },],\n'nodown': [{ type: Input },],\n};\n}\n\nfunction SharePositionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSharePositionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharePositionComponent.ctorParameters;\n/** @type {?} */\nSharePositionComponent.propDecorators;\n/** @type {?} */\nSharePositionComponent.prototype._noup;\n/** @type {?} */\nSharePositionComponent.prototype._nodown;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ControlBase } from '../base';\nexport class ShareSwiperComponent extends ControlBase implements OnInit {\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl('loop', 'true');\n        this.checkControl('speed', '300');\n        this.checkControl('delay', '3000');\n        this.checkControl('effect', 'slide');\n        this.checkControl('pagination', 'bullets');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-swiper',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>滑动设置</h1>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  是否循环\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <select formControlName=\"loop\">\n                      <option value=\"true\">循环</option>\n                      <option value=\"false\">不循环</option>\n                  </select>\n              </div>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  速度\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"speed\">\n              </div>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  切换动画\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <select formControlName=\"effect\">\n                      <option value=\"slide\">slide</option>\n                      <option value=\"fade\">fade</option>\n                      <option value=\"cube\">cube</option>\n                      <option value=\"coverflow\">coverflow</option>\n                      <option value=\"flip\">flip</option>\n                  </select>\n              </div>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  自动播放\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"delay\">\n              </div>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  页码\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <select formControlName=\"pagination\">\n                      <option value=\"bullets\">bullets</option>\n                      <option value=\"fraction\">fraction</option>\n                      <option value=\"progressbar\">progressbar</option>\n                      <option value=\"custom\">custom</option>\n                  </select>\n              </div>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ShareSwiperComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareSwiperComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareSwiperComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { map } from 'rxjs/operators/map';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { ControlBase } from '../base';\nexport class ShareBorderComponent extends ControlBase implements OnInit {\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.props.contains('border')) {\n            const /** @type {?} */ border: string = this.props.get('border').value;\n            const [width, style, color] = border.split(' ');\n            this.checkControl('border-top-width.px', this.pxToNumber(width));\n            this.checkControl('border-right-width.px', this.pxToNumber(width));\n            this.checkControl('border-bottom-width.px', this.pxToNumber(width));\n            this.checkControl('border-left-width.px', this.pxToNumber(width));\n            this.checkControl('border-color', color);\n            this.checkControl('border-style', style);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-border',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>边框设置</h1>\n          <div class=\"setting-row-input\" *ngIf=\"props.contains('border-top-width.px')\">\n              <div class=\"setting-row-input-label\">\n                  上边框:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" min=\"0\" step=\"1\" formControlName=\"border-top-width.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\" *ngIf=\"props.contains('border-right-width.px')\">\n              <div class=\"setting-row-input-label\">\n                  右边框:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" min=\"0\" step=\"1\" formControlName=\"border-right-width.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\" *ngIf=\"props.contains('border-bottom-width.px')\">\n              <div class=\"setting-row-input-label\">\n                  下边框:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" min=\"0\" step=\"1\" formControlName=\"border-bottom-width.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\" *ngIf=\"props.contains('border-left-width.px')\">\n              <div class=\"setting-row-input-label\">\n                  左边框:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" min=\"0\" step=\"1\" formControlName=\"border-left-width.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ShareBorderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareBorderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareBorderComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { map } from 'rxjs/operators/map';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { ControlBase } from '../base';\nexport class SharePaddingComponent extends ControlBase implements OnInit {\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl('padding', '0');\n        const /** @type {?} */ margin: string = this.props.get('padding').value;\n        const [top, right, bottom, left] = margin.split(\" \");\n        this.checkControl('padding-top.px', this.pxToNumber(top));\n        this.checkControl('padding-right.px', this.pxToNumber(right));\n        this.checkControl('padding-bottom.px', this.pxToNumber(bottom));\n        this.checkControl('padding-left.px', this.pxToNumber(left));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-padding',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>內间距设置</h1>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  上间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"padding-top.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  右间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"padding-right.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  下间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"padding-bottom.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  左间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"padding-left.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SharePaddingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSharePaddingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharePaddingComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { map } from 'rxjs/operators/map';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { ControlBase } from '../base';\nexport class ShareMarginComponent extends ControlBase implements OnInit {\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        const /** @type {?} */ margin: string = this.props.get('margin').value;\n        const [top, right, bottom, left] = margin.split(\" \");\n        this.checkControl('margin-top.px', this.pxToNumber(top));\n        this.checkControl('margin-right.px', this.pxToNumber(right));\n        this.checkControl('margin-bottom.px', this.pxToNumber(bottom));\n        this.checkControl('margin-left.px', this.pxToNumber(left));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-margin',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>外间距设置</h1>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  上间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"margin-top.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  右间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"margin-right.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  下间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"margin-bottom.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  左间距:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" formControlName=\"margin-left.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n          </div>\n      </div>\n    `,\n    styles: [`\n      :host {\n        display: block; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ShareMarginComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareMarginComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareMarginComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ControlBase } from '../base';\nexport class ShareBackgroundComponent extends ControlBase implements OnInit {\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl('background-image', '');\n        this.checkControl('background-size', 'cover');\n        this.checkControl('background-position', 'cover');\n        this.checkControl('background-repeat', 'no-repeat');\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nbackgroundImageChange(e: any) {\n        this.props.get('background-image').setValue(`url(${e.target.value})`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-background',\n    template: `\n      <!-- <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>背景设置</h1>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  图片:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"text\" (change)=\"backgroundImageChange($event)\" [attr.value]=\"props.get('background-image').value\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  平铺:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"text\" [formControlName]=\"'background-repeat'\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  大小:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"text\" [formControlName]=\"'background-size'\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  位置:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"text\" [formControlName]=\"'background-position'\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n      </div> -->\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ShareBackgroundComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareBackgroundComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareBackgroundComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase } from '../base';\nexport class ShareSizeComponent extends ControlBase implements OnInit {\n     props: FormGroup;\n     unit: string[] = ['%', 'px']\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl(`width.${this.unit[0]}`, '100');\n        this.checkControl(`height.px`, '50');\n        this.checkControl(`line-height.px`, '50');\n        this.checkControl(`min-height.px`, '50');\n        this.checkControl(`min-width.${this.unit[0]}`, '100');\n        try {\n            this.props.controls['height.px'].valueChanges.subscribe(res => {\n                this.props.controls['line-height.px'].setValue(res);\n                this.props.controls['min-height.px'].setValue(res);\n            });\n            this.props.controls[`width.${this.unit[0]}`].valueChanges.subscribe(res => {\n                this.props.controls[`min-width.${this.unit[0]}`].setValue(res);\n            });\n        } catch ( /** @type {?} */err) {\n            console.log(this.props.get('height.px'))\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nclearValue(name: string) {\n        this.props.controls[name].setValue(null);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-size',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>大小设置</h1>\n          <div class=\"setting-row-input\">\n              <label class=\"setting-row-input-label\" for=\"setting-row-input-width\">\n                  宽度:\n              </label>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" #width id=\"setting-row-input-width\" [attr.placeholder]=\"'宽度'+unit[0]\" [formControlName]=\"'width.'+unit[0]\">\n              </div>\n              <span class=\"setting-row-input-unit\">\n                  {{unit[0]}}\n              </span>\n              <span (click)=\"clearValue('width.'+unit[0])\" class=\"setting-row-input-unit\">自动</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <label class=\"setting-row-input-label\" for=\"setting-row-input-height\">\n                  高度:\n              </label>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" id=\"setting-row-input-height\" placeholder=\"高度\" formControlName=\"height.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n              <span (click)=\"clearValue('height.px')\" class=\"setting-row-input-unit\">自动</span>\n          </div>\n          <div class=\"setting-row-input\">\n              <label class=\"setting-row-input-label\" for=\"setting-row-input-height\">\n                  行高:\n              </label>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"number\" id=\"setting-row-input-height\" placeholder=\"行高\" formControlName=\"line-height.px\">\n              </div>\n              <span class=\"setting-row-input-unit\">px</span>\n              <span (click)=\"clearValue('line-height.px')\" class=\"setting-row-input-unit\">自动</span>\n          </div>\n      </div>\n    `,\n    styles: [`\n      :host {\n        display: block; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'props': [{ type: Input },],\n'unit': [{ type: Input },],\n};\n}\n\nfunction ShareSizeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareSizeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareSizeComponent.ctorParameters;\n/** @type {?} */\nShareSizeComponent.propDecorators;\n/** @type {?} */\nShareSizeComponent.prototype.props;\n/** @type {?} */\nShareSizeComponent.prototype.unit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ControlBase } from '../base';\nexport class ShareColorComponent extends ControlBase implements OnInit {\nconstructor() { \n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.checkControl('color', this.getStyle('color'));\n        this.checkControl('background-color', this.getStyle('background-color'));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-color',\n    template: `\n      <div class=\"setting-row\" [formGroup]=\"props\">\n          <h1>颜色</h1>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  背景色:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"color\" placeholder=\"背景色\" [formControlName]=\"'background-color'\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n          <div class=\"setting-row-input\">\n              <div class=\"setting-row-input-label\">\n                  前景色:\n              </div>\n              <div class=\"setting-row-input-content\">\n                  <input type=\"color\" placeholder=\"背景色\" [formControlName]=\"'color'\">\n              </div>\n              <span class=\"setting-row-input-unit\"></span>\n          </div>\n      </div>\n    `,\n    styles: [`\n      .row {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        width: 100%;\n        margin-top: 5px; }\n        .row input {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          width: 50%; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ShareColorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareColorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareColorComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nexport class ControlBase {\n     ele: HTMLElement;\n     props: FormGroup;\nconstructor() { }\n/**\n * @param {?} name\n * @param {?=} _default\n * @return {?}\n */\ncheckControl(name: string, _default: string = '') {\n        if (!this.props.contains(name)) {\n            this.createControl(name, _default);\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\ngetStyle(name: string) {\n        if (this.ele) {\n            return this.ele.style[this.strToHump(name)];\n        } else {\n            return '';\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nstrToHump(name: string) {\n        const /** @type {?} */ re = /-(\\w)/g;\n        return name.replace(re, function ($0, $1) {\n            return $1.toUpperCase();\n        });\n    }\n/**\n * @param {?} name\n * @param {?} _default\n * @return {?}\n */\ncreateControl(name: string, _default: string) {\n        this.props.addControl(name, new FormControl(_default));\n    }\n/**\n * @param {?} px\n * @return {?}\n */\npxToNumber(px: string) {\n        if (!px) {\n            return '0';\n        }\n        return px.replace('px', '');\n    }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ele': [{ type: Input },],\n'props': [{ type: Input },],\n};\n}\n\nfunction ControlBase_tsickle_Closure_declarations() {\n/** @type {?} */\nControlBase.propDecorators;\n/** @type {?} */\nControlBase.prototype.ele;\n/** @type {?} */\nControlBase.prototype.props;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges, Renderer2, InjectionToken, Inject\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService, DesignPropsService, DesignApiService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nimport { guid } from './guid';\nexport const /** @type {?} */ DRAG_DROP_ALL = new InjectionToken('DRAG_DROP_ALL');\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n     ngComponentInstance: any;\n\n     ngComponentClick: (sm: any, instance: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n * @param {?} api\n * @param {?} props\n * @param {?} render\n * @param {?} dragDropAll\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService,\nprivate api: DesignApiService,\nprivate props: DesignPropsService,\nprivate render: Renderer2,\nprivate dragDropAll: boolean\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            if (designLibraryProp) {\n                let /** @type {?} */ component: Type<any>;\n                const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n                if (this.ngComponentPreview) {\n                    component = libs.view;\n                } else {\n                    component = libs.setting;\n                }\n                const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n                const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                    elInjector.get(ComponentFactoryResolver);\n                const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                    componentFactoryResolver.resolveComponentFactory(component);\n                const /** @type {?} */ componentRef = this.viewContainerRef.createComponent<ReactComponent<any, any>>(\n                    componentFactory,\n                    currentIndex,\n                    elInjector\n                );\n                // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n                const { instance } = componentRef;\n                if (designLibraryProp.props) {\n                    instance.props = designLibraryProp.props;\n                }\n                if (designLibraryProp.state) {\n                    instance.state = designLibraryProp.state;\n                }\n                if (instance.onClick && instance.onClick.subscribe) {\n                    instance.onClick.subscribe((ev: MouseEvent) => {\n                        if (this.ngComponentPreview) {\n                            this.props.setActiveSettingProps(designLibraryProp, instance);\n                            ev.stopPropagation();\n                        }\n                    });\n                }\n                instance.setClass(this.ngComponentClass);\n                instance.setStyle(this.ngComponentStyle);\n                instance.instance = this.ngComponentInstance;\n                if (this.ngComponentDrag || this.dragDropAll) {\n                    this.setDrage(instance);\n                }\n                if (this.ngComponentDrop || this.dragDropAll) {\n                    this.setDrop(instance);\n                }\n                if (designLibraryProp.uuid) {\n                    instance.guid = designLibraryProp.uuid;\n                } else {\n                    designLibraryProp.uuid = instance.guid = guid();\n                }\n                this.api.save(instance, designLibraryProp, this.ngComponentPreview);\n            }\n        } catch ( /** @type {?} */err) {\n            console.log(`${this.ngComponentPreview ? 'preview' : 'setting'} is not fond`, item);\n            console.dir(err);\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", 'guid_' + instance.guid);\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate deepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(err);\n            return {};\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            var /** @type {?} */ uuid = this.trimGuid(data);\n            if (!this.isGuid(data)) {\n                // 获取props\n                const /** @type {?} */ props = this.props.getPropsByName(data);\n                instance.props.children = instance.props.children || [];\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                // 记录上级\n                deepProps.father = instance.guid;\n                instance.props.children.push(deepProps);\n                this.props.instance.props.children.push(deepProps)\n            } else if (uuid !== instance.guid) {\n                // 移动已存在props\n                let /** @type {?} */ props = this.getInstanceProps(uuid);\n                if (props) {\n                    const /** @type {?} */ deepProps = this.deepCopy(props);\n                    deepProps.father = instance.guid;\n                    instance.props.children.push(deepProps);\n                }\n            }\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            this.render.removeStyle(ele, 'dashed');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            this.render.setStyle(ele, 'dashed', '1px lodash red');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n{type: DesignApiService, },\n{type: DesignPropsService, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DRAG_DROP_ALL, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentInstance': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentInstance;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n/** @type {?} */\nNgComponentDirective.prototype.api;\n/** @type {?} */\nNgComponentDirective.prototype.props;\n/** @type {?} */\nNgComponentDirective.prototype.render;\n/** @type {?} */\nNgComponentDirective.prototype.dragDropAll;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n    father?: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\n\n\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { of } from 'rxjs/observable/of';\nimport'rxjs/add/operator/switchMap';\nimport { guid } from './guid';\n\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport const /** @type {?} */ instancesMap: Map<string, { setting: any, view: any }> = new Map();\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n * @param {?} instance\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp,\npublic instance: any\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n/** @type {?} */\nInstanceComponent.prototype.instance;\n}\n\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) {\n        return instancesMap.get(id);\n    }\n/**\n * @param {?} instance\n * @param {?} designLibraryProp\n * @param {?} isPreview\n * @return {?}\n */\nsave(instance: any, designLibraryProp: any, isPreview) {\n        const /** @type {?} */ instanceComponent = new InstanceComponent(instance.guid, designLibraryProp, instance);\n        if (isPreview) {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.view = instanceComponent;\n            } else {\n                map = {\n                    setting: null,\n                    view: instanceComponent\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        } else {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.setting = instanceComponent;\n            } else {\n                map = {\n                    setting: instanceComponent,\n                    view: null\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport const /** @type {?} */ DESIGN_COMPONENTS = new InjectionToken('DESIGN_COMPONENTS');\nimport'rxjs/add/operator/map';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nexport class DesignPropsService {\n    // 所有props\n    props: any[] = [];\n    // 当前页面\n    pageProps: DesignLibraryProp[] = [];\n    // 设置\n    _settingProps: DesignLibraryProp;\n    settingForm: FormGroup;\n/**\n * @param {?} val\n * @return {?}\n */\nset settingProps(val: DesignLibraryProp) {\n        this._settingProps = val;\n        try {\n            this.settingForm.get('content').setValue(this._settingProps.props['content']);\n        } catch ( /** @type {?} */err) {\n            this.settingForm.addControl('content', new FormControl(this._settingProps.props['content']))\n        }\n        try {\n            if (!this._settingProps) {\n                this.fathersProps = [];\n            }\n            this.fathers = this.getFather(this.settingProps);\n            if (this.fathers && this.fathers.length > 0) {\n                this.fathersProps = [];\n                this.fathers.map(res => {\n                    const /** @type {?} */ props = this.getPropsByUid(res);\n                    if (props) {\n                        this.fathersProps.push(props);\n                    }\n                });\n            }\n        } catch ( /** @type {?} */err) { }\n        console.log(this);\n    }\n/**\n * @return {?}\n */\nget settingProps() {\n        return this._settingProps;\n    }\n    instance: any;\n    // 多级\n    fathers: any;\n    fathersProps: DesignLibraryProp[] = [];\n\n    historyKey: string = 'historyKey';\n    // 历史记录\n    historys: any[] = [];\n\n    removePosition: number[] = [];\n/**\n * @param {?} props\n * @param {?} library\n * @param {?} fb\n */\nconstructor(\n         props: any,\npublic library: DesignLibraryService,\nprivate fb: FormBuilder\n    ) {\n        this.props = flatten(props);\n        try {\n            this.backToHistory();\n        } catch (err) {\n            localStorage.clear();\n        }\n        this.settingForm = this.fb.group({\n            content: ''\n        });\n        this.settingForm.valueChanges.subscribe(res => {\n            this._settingProps.props['content'] = res.content;\n        });\n    }\n/**\n * @param {?} designLibraryProp\n * @param {?} instance\n * @return {?}\n */\nsetActiveSettingProps(designLibraryProp: any, instance: any) {\n        this.settingProps = designLibraryProp;\n        if (this.instance) {\n            this.instance.removeClass('is-focus');\n        }\n        this.instance = instance;\n        instance.addClass('is-focus');\n    }\n/**\n * @param {?} name\n * @return {?}\n */\ngetPropsByName(name: string): DesignLibraryProp {\n        let /** @type {?} */ com: DesignLibraryProp;\n        this.props.forEach((item) => {\n            if (name === item.name) {\n                com = item;\n            }\n        });\n        return com;\n    }\n/**\n * @param {?} name\n * @param {?=} father\n * @return {?}\n */\naddPropByName(name: string, father?: string) {\n        const /** @type {?} */ com = this.getPropsByName(name);\n        const /** @type {?} */ deepCopyCom: DesignLibraryProp = this.deepCopy(com);\n        if (deepCopyCom) {\n            if (deepCopyCom.uuid) {\n                // 交换位置\n            } else {\n                deepCopyCom.uuid = guid();\n                deepCopyCom.father = father || '';\n                const /** @type {?} */ lib = this.library.get(deepCopyCom.name);\n                deepCopyCom.props = new lib.default();\n                this.pageProps.push(deepCopyCom);\n                this.updateHistory();\n            }\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\naddPropsToInstanceByName(name: string) {\n        let /** @type {?} */ props = this.getPropsByName(name);\n        if (props) {\n            if (this.instance) {\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                deepProps.father = this.instance.guid;\n                const /** @type {?} */ lib = this.library.get(deepProps.name);\n                deepProps.props = new lib.default();\n                deepProps.uuid = guid();\n                this.instance.props.children = this.instance.props.children || [];\n                this.instance.props.children.push(deepProps);\n            } else {\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                deepProps.father = null;\n                const /** @type {?} */ lib = this.library.get(deepProps.name);\n                deepProps.props = new lib.default();\n                deepProps.uuid = guid();\n                this.pageProps.push(deepProps);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ntoFatherProps() {\n        console.log(this.fathersProps);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\ndeepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(obj);\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nremovePropsByUid(uuid: string) {\n        uuid = this.trimGuid(uuid);\n        let /** @type {?} */ props = this.getPropsByUid(uuid);\n        if (props) {\n            if (props.father) {\n                let /** @type {?} */ father: any = this.getPropsByUid(props.father);\n                let /** @type {?} */ index = father.props.children.indexOf(props);\n                if (index > -1) {\n                    const /** @type {?} */ children = father.props.children.splice(index, 1);\n                    this.instance.setProps({\n                        ...father.props,\n                        ...{\n                            children: children\n                        }\n                    });\n                }\n            } else {\n                let /** @type {?} */ index = this.pageProps.indexOf(props);\n                if (index > -1) {\n                    this.pageProps.splice(index, 1);\n                }\n            }\n        }\n        this.updateHistory();\n    }\n/**\n * @param {?} props\n * @param {?=} ids\n * @return {?}\n */\ngetFather(props: DesignLibraryProp, ids: any[] = []) {\n        ids.push(props.uuid);\n        if (props.father) {\n            let /** @type {?} */ father = this.getPropsByUid(props.father);\n            if (father) {\n                ids = this.getFather(( /** @type {?} */((<DesignLibraryProp>father))), ids);\n            }\n        }\n        return ids;\n    }\n/**\n * @param {?} uuid\n * @param {?=} data\n * @return {?}\n */\ngetPropsByUid(uuid: string, data?: DesignLibraryProp[]): DesignLibraryProp | false {\n        data = data || this.pageProps;\n        for (let /** @type {?} */ i = 0; i < data.length; i++) {\n            const /** @type {?} */ item = data[i];\n            if (item.uuid + '' === uuid + '') {\n                return item;\n            } else if (item.props.children) {\n                const /** @type {?} */ res = this.getPropsByUid(uuid, item.props.children);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\ngetHistory(): DesignHistoryProp[] {\n        let /** @type {?} */ local = localStorage.getItem(this.historyKey);\n        if (local) {\n            const /** @type {?} */ items = /** @type {?} */(( JSON.parse(local) as DesignHistoryProp[]));\n            this.historys = items;\n            return items;\n        } else {\n            return [];\n        }\n    }\n/**\n * @return {?}\n */\nupdateHistory(): void {\n        this.historys.unshift({\n            name: new Date().toISOString(),\n            data: this.pageProps\n        });\n        if (this.historys.length > 50) {\n            this.historys = this.historys.splice(this.historys.length, this.historys.length - 50);\n        }\n        localStorage.setItem(this.historyKey, JSON.stringify(this.historys));\n    }\n/**\n * @param {?=} item\n * @return {?}\n */\nbackToHistory(item: DesignHistoryProp = null) {\n        if (!item) {\n            item = this.getHistory()[0];\n        }\n        this.pageProps = item.data;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_COMPONENTS, ] }, ]},\n{type: DesignLibraryService, },\n{type: FormBuilder, },\n];\n}\n\nfunction DesignPropsService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignPropsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignPropsService.ctorParameters;\n/** @type {?} */\nDesignPropsService.prototype.props;\n/** @type {?} */\nDesignPropsService.prototype.pageProps;\n/** @type {?} */\nDesignPropsService.prototype._settingProps;\n/** @type {?} */\nDesignPropsService.prototype.settingForm;\n/** @type {?} */\nDesignPropsService.prototype.instance;\n/** @type {?} */\nDesignPropsService.prototype.fathers;\n/** @type {?} */\nDesignPropsService.prototype.fathersProps;\n/** @type {?} */\nDesignPropsService.prototype.historyKey;\n/** @type {?} */\nDesignPropsService.prototype.historys;\n/** @type {?} */\nDesignPropsService.prototype.removePosition;\n/** @type {?} */\nDesignPropsService.prototype.library;\n/** @type {?} */\nDesignPropsService.prototype.fb;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @return {?}\n */\nexport function guid() {\n/**\n * @return {?}\n */\nfunction S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n"],"names":["fromEvent","map","guid"],"mappings":"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"}

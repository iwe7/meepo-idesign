{"version":3,"file":"meepo-idesign-share.umd.js","sources":["~/meepo-idesign-share/design-share.module.ts","~/meepo-idesign-share/ng-component.ts","~/meepo-idesign-share/types.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { NgComponentDirective } from './ng-component';\nexport class IDesignComponentModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        NgComponentDirective\n    ],\n    declarations: [\n        NgComponentDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n\n     ngComponentClick: (sm: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            let /** @type {?} */ component: Type<any>;\n            const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n            if (this.ngComponentPreview) {\n                component = libs.view;\n            } else {\n                component = libs.setting;\n            }\n            const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n            const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                componentFactoryResolver.resolveComponentFactory(component);\n            const /** @type {?} */ componentRef = this.viewContainerRef.createComponent(\n                componentFactory,\n                currentIndex,\n                elInjector\n            );\n            // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n            componentRef.instance.props = designLibraryProp.props;\n            componentRef.instance.onClick.subscribe(res => {\n                this.ngComponentClick && this.ngComponentClick(designLibraryProp)\n            });\n            componentRef.instance.setClass(this.ngComponentClass);\n            componentRef.instance.setStyle(this.ngComponentStyle);\n            this.setDrage(componentRef.instance);\n            this.setDrop(componentRef.instance);\n            designLibraryProp.uuid = componentRef.instance.guid;\n            const /** @type {?} */ instanceComponent = new InstanceComponent(componentRef.instance.guid, designLibraryProp);\n            this.instances.push(instanceComponent);\n        } catch ( /** @type {?} */err) { }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", instance.guid);\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            if (instance.guid !== data) {\n                // 自己放置自己 忽略 否则提示是放入内部还是互换位置\n                let /** @type {?} */ props = this.getInstanceProps(data);\n                if (props) {\n                    instance.props.children.push(props);\n                }\n            }\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            ele.style.bor\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n}\n\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) { }\n/**\n * @param {?} data\n * @param {?} id\n * @return {?}\n */\nsave(data: any, id: string) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","IterableDiffers","TemplateRef","ViewContainerRef","Directive","fromEvent","ComponentFactoryResolver","Inject","Injectable","InjectionToken"],"mappings":"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"}

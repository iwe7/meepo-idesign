!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("rxjs/observable/fromEvent"),require("rxjs/add/operator/switchMap"),require("rxjs/add/operator/map"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/observable/fromEvent","rxjs/add/operator/switchMap","rxjs/add/operator/map","@angular/forms","@angular/common"],n):n(t["meepo-idesign-share"]={},t.ng.core,t.Rx.Observable,t.Rx.Observable.prototype,t.Rx.Observable.prototype,t.ng.forms,t.ng.common)}(this,function(t,n,e,i,o,r,s){"use strict";var p,a=this&&this.__extends||(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])},function(t,n){function e(){this.constructor=t}p(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});function c(){function t(){return(65536*(1+Math.random())|0).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}function u(t){return Array.prototype.concat.apply([],t)}var l=new n.InjectionToken("DESIGN_LIBRARYS"),d=new Map,h=function(){return function(t,n,e){this.guid=t,this.props=n,this.instance=e}}(),g=function(){function t(){}return t.prototype.get=function(t){return d.get(t)},t.prototype.save=function(t,n,e){var i,o=new h(t.guid,n,t);e?((i=d.get(t.guid))?i.view=o:i={setting:null,view:o},d.set(t.guid,i)):((i=d.get(t.guid))?i.setting=o:i={setting:o,view:null},d.set(t.guid,i))},t}();g.decorators=[{type:n.Injectable}],g.ctorParameters=function(){return[]};var v=new n.InjectionToken("DESIGN_COMPONENTS"),f=function(){function t(t,n,e){var i=this;this.library=n,this.fb=e,this.props=[],this.pageProps=[],this.fathersProps=[],this.historyKey="historyKey",this.historys=[],this.removePosition=[],this.props=u(t);try{this.backToHistory()}catch(o){localStorage.clear()}this.settingForm=this.fb.group({content:""}),this.settingForm.valueChanges.subscribe(function(t){i._settingProps.props.content=t.content})}return Object.defineProperty(t.prototype,"settingProps",{get:function(){return this._settingProps},set:function(t){var n=this;this._settingProps=t;try{this.settingForm.get("content").setValue(this._settingProps.props.content)}catch(e){this.settingForm.addControl("content",new r.FormControl(this._settingProps.props.content))}try{this._settingProps||(this.fathersProps=[]),this.fathers=this.getFather(this.settingProps),this.fathers&&this.fathers.length>0&&(this.fathersProps=[],this.fathers.map(function(t){var e=n.getPropsByUid(t);e&&n.fathersProps.push(e)}))}catch(e){}},enumerable:!0,configurable:!0}),t.prototype.setActiveSettingProps=function(t,n){this.settingProps=t,this.instance&&this.instance.removeClass("is-focus"),this.instance=n,n.addClass("is-focus")},t.prototype.getPropsByName=function(t){var n;return this.props.forEach(function(e){t===e.name&&(n=e)}),n},t.prototype.addPropByName=function(t,n){var e=this.getPropsByName(t),i=this.deepCopy(e);if(i)if(i.uuid);else{i.uuid=c(),i.father=n||"";var o=this.library.get(i.name);i.props=new o["default"],this.pageProps.push(i),this.updateHistory()}},t.prototype.addPropsToInstanceByName=function(t){var n=this.getPropsByName(t);if(n)if(this.instance){(i=this.deepCopy(n)).father=this.instance.guid;var e=this.library.get(i.name);i.props=new e["default"],i.uuid=c(),this.instance.props.children=this.instance.props.children||[],this.instance.props.children.push(i)}else{var i;(i=this.deepCopy(n)).father=null;e=this.library.get(i.name);i.props=new e["default"],i.uuid=c(),this.pageProps.push(i)}},t.prototype.toFatherProps=function(){console.log(this.fathersProps)},t.prototype.deepCopy=function(t){try{return JSON.parse(JSON.stringify(t))}catch(n){console.dir(t)}},t.prototype.isGuid=function(t){return t.indexOf("guid_")>-1},t.prototype.trimGuid=function(t){return t.replace("guid_","")},t.prototype.removePropsByUid=function(t){t=this.trimGuid(t);var n=this.getPropsByUid(t);if(n)if(n.father){var e=this.getPropsByUid(n.father);try{if((o=e.props.children.indexOf(n))>-1){var i=e.props.children.splice(o,1);this.instance.setProps(Object.assign({},e.props,{children:i}))}}catch(r){console.log(r)}}else{var o;(o=this.pageProps.indexOf(n))>-1&&this.pageProps.splice(o,1)}this.updateHistory()},t.prototype.getFather=function(t,n){if(void 0===n&&(n=[]),n.push(t.uuid),t.father){var e=this.getPropsByUid(t.father);e&&(n=this.getFather(e,n))}return n},t.prototype.getPropsByUid=function(t,n){n=n||this.pageProps;for(var e=0;e<n.length;e++){var i=n[e];if(i.uuid+""==t+"")return i;if(i.props.children){var o=this.getPropsByUid(t,i.props.children);if(o)return o}}return!1},t.prototype.getHistory=function(){var t=localStorage.getItem(this.historyKey);if(t){var n=JSON.parse(t);return this.historys=n,n}return[]},t.prototype.updateHistory=function(){this.historys.unshift({name:(new Date).toISOString(),data:this.pageProps}),this.historys.length>50&&(this.historys=this.historys.splice(this.historys.length,this.historys.length-50)),localStorage.setItem(this.historyKey,JSON.stringify(this.historys))},t.prototype.backToHistory=function(t){void 0===t&&(t=null),t||(t=this.getHistory()[0]),this.pageProps=t.data},t}();f.decorators=[{type:n.Injectable}],f.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[v]}]},{type:m},{type:r.FormBuilder}]};var m=function(){function t(t){this.components=[],this.components=u(t)}return t.prototype.get=function(t){var n;return this.components.map(function(e){e[t]&&(n=e[t])}),n},t}();m.decorators=[{type:n.Injectable}],m.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[l]}]}]};var y=new n.InjectionToken("DRAG_DROP_ALL"),w=function(){function t(t,n,e,i,o,r,s,p){this._viewContainerRef=t,this._template=n,this.differs=e,this.librarys=i,this.api=o,this.props=r,this.render=s,this.dragDropAll=p,this.instances=[],this.viewContainerRef=t}return t.prototype.ngDoCheck=function(){var t=this;if(this._differ){var n=this._differ.diff(this.ngComponent);n&&n.forEachOperation(function(n,e,i){if(null==n.previousIndex)t.createComponent(n,i);else if(null==i)t._viewContainerRef.remove(e);else{var o=t._viewContainerRef.get(e);t._viewContainerRef.move(o,i)}})}},t.prototype.createComponent=function(t,e){var i=this;try{var o=t.item;if(o){var r=void 0,s=this.librarys.get(o.name);r=this.ngComponentPreview?s.view:s.setting;var p=this.viewContainerRef.parentInjector,a=(this.moduleRef?this.moduleRef.componentFactoryResolver:p.get(n.ComponentFactoryResolver)).resolveComponentFactory(r),u=this.viewContainerRef.createComponent(a,e,p).instance;o.props&&(u.props=o.props),o.state&&(u.state=o.state),u.onClick&&u.onClick.subscribe&&u.onClick.subscribe(function(t){i.ngComponentPreview&&(i.props.setActiveSettingProps(o,u),t.stopPropagation())}),u.setClass(u.props.classObj),u.setStyle(u.props.style),u.instance=this.ngComponentInstance,(this.ngComponentDrag||this.dragDropAll)&&this.setDrage(u),(this.ngComponentDrop||this.dragDropAll)&&this.setDrop(u),o.uuid?u.guid=o.uuid:o.uuid=u.guid=c(),this.api.save(u,o,this.ngComponentPreview)}}catch(l){console.log((this.ngComponentPreview?"preview":"setting")+" is not fond",t),console.dir(l)}},t.prototype.ngOnChanges=function(t){if(this.viewContainerRef.clear(),"ngComponent"in t){var n=t.ngComponent.currentValue;if(n&&!this._differ)try{this._differ=this.differs.find(n).create()}catch(e){}}},t.prototype.setDrage=function(t){t.setAttribute({draggable:!0});var n=t.ele.nativeElement;e.fromEvent(n,"dragstart").subscribe(function(n){t.guid,n.dataTransfer.setData("name","guid_"+t.guid),n.stopPropagation()}),e.fromEvent(n,"dragend").subscribe(function(t){})},t.prototype.isGuid=function(t){return t.indexOf("guid_")>-1},t.prototype.trimGuid=function(t){return t.replace("guid_","")},t.prototype.deepCopy=function(t){try{return JSON.parse(JSON.stringify(t))}catch(n){return console.dir(n),{}}},t.prototype.setDrop=function(t){var n=this,i=t.ele.nativeElement;e.fromEvent(i,"drop").subscribe(function(e){e.preventDefault(),e.stopPropagation();var i=e.dataTransfer.getData("name"),o=n.trimGuid(i);if(n.isGuid(i)){if(o!==t.guid){if(s=n.getInstanceProps(o))(r=n.deepCopy(s)).father=t.guid,t.props.children.push(r)}}else{var r,s=n.props.getPropsByName(i);t.props.children=t.props.children||[],(r=n.deepCopy(s)).father=t.guid,t.props.children.push(r),n.props.instance.props.children.push(r)}}),e.fromEvent(i,"dragleave").subscribe(function(t){n.render.removeStyle(i,"dashed"),t.preventDefault(),t.stopPropagation()}),e.fromEvent(i,"dragover").subscribe(function(t){n.render.setStyle(i,"dashed","1px lodash red"),t.preventDefault(),t.stopPropagation()})},t.prototype.getInstanceProps=function(t){var n;return this.instances.map(function(e){e.guid===t&&(n=e.props)}),n},t}();w.decorators=[{type:n.Directive,args:[{selector:"[ngComponent]"}]}],w.ctorParameters=function(){return[{type:n.ViewContainerRef},{type:n.TemplateRef},{type:n.IterableDiffers},{type:m},{type:g},{type:f},{type:n.Renderer2},{type:undefined,decorators:[{type:n.Inject,args:[y]}]}]},w.propDecorators={ngComponent:[{type:n.Input}],ngComponentPreview:[{type:n.Input}],ngComponentState:[{type:n.Input}],ngComponentClass:[{type:n.Input}],ngComponentStyle:[{type:n.Input}],ngComponentDrag:[{type:n.Input}],ngComponentDrop:[{type:n.Input}],ngComponentInstance:[{type:n.Input}],ngComponentClick:[{type:n.Input}]};var b=function(){function t(){}return t.prototype.checkControl=function(t,n){void 0===n&&(n=""),this.props.contains(t)||this.createControl(t,n)},t.prototype.getStyle=function(t){return this.ele?this.ele.style[this.strToHump(t)]:""},t.prototype.strToHump=function(t){return t.replace(/-(\w)/g,function(t,n){return n.toUpperCase()})},t.prototype.createControl=function(t,n){this.props.addControl(t,new r.FormControl(n))},t.prototype.pxToNumber=function(t){return t?t.replace("px",""):"0"},t}();b.propDecorators={ele:[{type:n.Input}],props:[{type:n.Input}]};var C=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){this.checkControl("color",this.getStyle("color")),this.checkControl("background-color",this.getStyle("background-color"))},n}(b);C.decorators=[{type:n.Component,args:[{selector:"share-color",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>颜色</h1>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  背景色:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="color" placeholder="背景色" [formControlName]="\'background-color\'">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  前景色:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="color" placeholder="背景色" [formControlName]="\'color\'">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n      </div>\n    ',styles:["\n      .row {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        width: 100%;\n        margin-top: 5px; }\n        .row input {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          width: 50%; }\n    "]}]}],C.ctorParameters=function(){return[]};var x=function(t){function n(){var n=t.call(this)||this;return n.unit=["%","px"],n}return a(n,t),n.prototype.ngOnInit=function(){var t=this;this.checkControl("width."+this.unit[0],"100"),this.checkControl("height.px","50"),this.checkControl("line-height.px","50"),this.checkControl("min-height.px","50"),this.checkControl("min-width."+this.unit[0],"100");try{this.props.controls["height.px"].valueChanges.subscribe(function(n){t.props.controls["line-height.px"].setValue(n),t.props.controls["min-height.px"].setValue(n)}),this.props.controls["width."+this.unit[0]].valueChanges.subscribe(function(n){t.props.controls["min-width."+t.unit[0]].setValue(n)})}catch(n){console.log(this.props.get("height.px"))}},n.prototype.clearValue=function(t){this.props.controls[t].setValue(null)},n}(b);x.decorators=[{type:n.Component,args:[{selector:"share-size",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>大小设置</h1>\n          <div class="setting-row-input">\n              <label class="setting-row-input-label" for="setting-row-input-width">\n                  宽度:\n              </label>\n              <div class="setting-row-input-content">\n                  <input type="number" #width id="setting-row-input-width" [attr.placeholder]="\'宽度\'+unit[0]" [formControlName]="\'width.\'+unit[0]">\n              </div>\n              <span class="setting-row-input-unit">\n                  {{unit[0]}}\n              </span>\n              <span (click)="clearValue(\'width.\'+unit[0])" class="setting-row-input-unit">自动</span>\n          </div>\n          <div class="setting-row-input">\n              <label class="setting-row-input-label" for="setting-row-input-height">\n                  高度:\n              </label>\n              <div class="setting-row-input-content">\n                  <input type="number" id="setting-row-input-height" placeholder="高度" formControlName="height.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n              <span (click)="clearValue(\'height.px\')" class="setting-row-input-unit">自动</span>\n          </div>\n          <div class="setting-row-input">\n              <label class="setting-row-input-label" for="setting-row-input-height">\n                  行高:\n              </label>\n              <div class="setting-row-input-content">\n                  <input type="number" id="setting-row-input-height" placeholder="行高" formControlName="line-height.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n              <span (click)="clearValue(\'line-height.px\')" class="setting-row-input-unit">自动</span>\n          </div>\n      </div>\n    ',styles:["\n      :host {\n        display: block; }\n    "]}]}],x.ctorParameters=function(){return[]},x.propDecorators={props:[{type:n.Input}],unit:[{type:n.Input}]};var P=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){this.checkControl("background-image",""),this.checkControl("background-size","cover"),this.checkControl("background-position","cover"),this.checkControl("background-repeat","no-repeat")},n.prototype.backgroundImageChange=function(t){this.props.get("background-image").setValue("url("+t.target.value+")")},n}(b);P.decorators=[{type:n.Component,args:[{selector:"share-background",template:'\n      \x3c!-- <div class="setting-row" [formGroup]="props">\n          <h1>背景设置</h1>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  图片:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="text" (change)="backgroundImageChange($event)" [attr.value]="props.get(\'background-image\').value">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  平铺:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="text" [formControlName]="\'background-repeat\'">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  大小:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="text" [formControlName]="\'background-size\'">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  位置:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="text" [formControlName]="\'background-position\'">\n              </div>\n              <span class="setting-row-input-unit"></span>\n          </div>\n      </div> --\x3e\n    '}]}],P.ctorParameters=function(){return[]};var k=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){var t=this.props.get("margin").value.split(" "),n=t[0],e=t[1],i=t[2],o=t[3];this.checkControl("margin-top.px",this.pxToNumber(n)),this.checkControl("margin-right.px",this.pxToNumber(e)),this.checkControl("margin-bottom.px",this.pxToNumber(i)),this.checkControl("margin-left.px",this.pxToNumber(o))},n}(b);k.decorators=[{type:n.Component,args:[{selector:"share-margin",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>外间距设置</h1>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  上间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="margin-top.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  右间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="margin-right.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  下间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="margin-bottom.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  左间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="margin-left.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n      </div>\n    ',styles:["\n      :host {\n        display: block; }\n    "]}]}],k.ctorParameters=function(){return[]};var N=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){this.checkControl("padding","0");var t=this.props.get("padding").value.split(" "),n=t[0],e=t[1],i=t[2],o=t[3];this.checkControl("padding-top.px",this.pxToNumber(n)),this.checkControl("padding-right.px",this.pxToNumber(e)),this.checkControl("padding-bottom.px",this.pxToNumber(i)),this.checkControl("padding-left.px",this.pxToNumber(o))},n}(b);N.decorators=[{type:n.Component,args:[{selector:"share-padding",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>內间距设置</h1>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  上间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="padding-top.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  右间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="padding-right.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  下间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="padding-bottom.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  左间距:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="padding-left.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n      </div>\n    '}]}],N.ctorParameters=function(){return[]};var I=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){if(this.props.contains("border")){var t=this.props.get("border").value.split(" "),n=t[0],e=t[1],i=t[2];this.checkControl("border-top-width.px",this.pxToNumber(n)),this.checkControl("border-right-width.px",this.pxToNumber(n)),this.checkControl("border-bottom-width.px",this.pxToNumber(n)),this.checkControl("border-left-width.px",this.pxToNumber(n)),this.checkControl("border-color",i),this.checkControl("border-style",e)}},n}(b);I.decorators=[{type:n.Component,args:[{selector:"share-border",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>边框设置</h1>\n          <div class="setting-row-input" *ngIf="props.contains(\'border-top-width.px\')">\n              <div class="setting-row-input-label">\n                  上边框:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" min="0" step="1" formControlName="border-top-width.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input" *ngIf="props.contains(\'border-right-width.px\')">\n              <div class="setting-row-input-label">\n                  右边框:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" min="0" step="1" formControlName="border-right-width.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input" *ngIf="props.contains(\'border-bottom-width.px\')">\n              <div class="setting-row-input-label">\n                  下边框:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" min="0" step="1" formControlName="border-bottom-width.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n          <div class="setting-row-input" *ngIf="props.contains(\'border-left-width.px\')">\n              <div class="setting-row-input-label">\n                  左边框:\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" min="0" step="1" formControlName="border-left-width.px">\n              </div>\n              <span class="setting-row-input-unit">px</span>\n          </div>\n      </div>\n    '}]}],I.ctorParameters=function(){return[]};var _=function(t){function n(){return t.call(this)||this}return a(n,t),n.prototype.ngOnInit=function(){this.checkControl("loop","true"),this.checkControl("speed","300"),this.checkControl("delay","3000"),this.checkControl("effect","slide"),this.checkControl("pagination","bullets")},n}(b);_.decorators=[{type:n.Component,args:[{selector:"share-swiper",template:'\n      <div class="setting-row" [formGroup]="props">\n          <h1>滑动设置</h1>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  是否循环\n              </div>\n              <div class="setting-row-input-content">\n                  <select formControlName="loop">\n                      <option value="true">循环</option>\n                      <option value="false">不循环</option>\n                  </select>\n              </div>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  速度\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="speed">\n              </div>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  切换动画\n              </div>\n              <div class="setting-row-input-content">\n                  <select formControlName="effect">\n                      <option value="slide">slide</option>\n                      <option value="fade">fade</option>\n                      <option value="cube">cube</option>\n                      <option value="coverflow">coverflow</option>\n                      <option value="flip">flip</option>\n                  </select>\n              </div>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  自动播放\n              </div>\n              <div class="setting-row-input-content">\n                  <input type="number" formControlName="delay">\n              </div>\n          </div>\n          <div class="setting-row-input">\n              <div class="setting-row-input-label">\n                  页码\n              </div>\n              <div class="setting-row-input-content">\n                  <select formControlName="pagination">\n                      <option value="bullets">bullets</option>\n                      <option value="fraction">fraction</option>\n                      <option value="progressbar">progressbar</option>\n                      <option value="custom">custom</option>\n                  </select>\n              </div>\n          </div>\n      </div>\n    '}]}],_.ctorParameters=function(){return[]};var O=function(t){function n(){var n=t.call(this)||this;return n._noup=!1,n._nodown=!1,n}return a(n,t),Object.defineProperty(n.prototype,"noup",{set:function(t){this._noup=!0},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"nodown",{set:function(t){this._nodown=!0},enumerable:!0,configurable:!0}),n.prototype.ngOnInit=function(){this.checkControl("position","relative"),this.checkControl("left.px","0"),this.checkControl("right.px","0"),this._noup||this.checkControl("top.px","0"),this._nodown||this.checkControl("bottom.px","0")},n}(b);O.decorators=[{type:n.Component,args:[{selector:"share-position",template:'\n      <div class="setting-row" [formGroup]="props">\n              <h1>\n                  定位\n              </h1>\n              <div class="setting-row-input" *ngIf="!_noup">\n                  <div class="setting-row-input-label">\n                      上:\n                  </div>\n                  <div class="setting-row-input-content">\n                      <input type="number" formControlName="top.px">\n                  </div>\n                  <span class="setting-row-input-unit">px</span>\n              </div>\n              <div class="setting-row-input">\n                  <div class="setting-row-input-label">\n                      右:\n                  </div>\n                  <div class="setting-row-input-content">\n                      <input type="number" formControlName="right.px">\n                  </div>\n                  <span class="setting-row-input-unit">px</span>\n              </div>\n              <div class="setting-row-input" *ngIf="!_nodown">\n                  <div class="setting-row-input-label">\n                      下:\n                  </div>\n                  <div class="setting-row-input-content">\n                      <input type="number" formControlName="bottom.px">\n                  </div>\n                  <span class="setting-row-input-unit">px</span>\n              </div>\n              <div class="setting-row-input">\n                  <div class="setting-row-input-label">\n                      左:\n                  </div>\n                  <div class="setting-row-input-content">\n                      <input type="number" formControlName="left.px">\n                  </div>\n                  <span class="setting-row-input-unit">px</span>\n              </div>\n          </div>\n    '}]}],O.ctorParameters=function(){return[]},O.propDecorators={noup:[{type:n.Input}],nodown:[{type:n.Input}]};var D=[C,x,P,k,N,O,I,_],S=function(){return function(t,n,e){this.$implicit=t,this.ngEachOf=n,this.key=e}}(),T=function(){function t(t,n,e){this._viewContainer=t,this._template=n,this._differs=e,this._differ=null}return Object.defineProperty(t.prototype,"ngForTemplate",{set:function(t){t&&(this._template=t)},enumerable:!0,configurable:!0}),t.prototype.ngOnChanges=function(t){if(this._viewContainer.clear(),"ngEachOf"in t){var n=t.ngEachOf.currentValue;this._applyChanges(n)}},t.prototype._applyChanges=function(t){for(var n in t){var e=t[n];this._viewContainer.createEmbeddedView(this._template,new S(e,this.ngEachOf,n),parseInt(n,16))}},t}();T.decorators=[{type:n.Directive,args:[{selector:"[ngEach][ngEachOf]"}]}],T.ctorParameters=function(){return[{type:n.ViewContainerRef},{type:n.TemplateRef},{type:n.KeyValueDiffers}]},T.propDecorators={ngEachOf:[{type:n.Input}],ngForTemplate:[{type:n.Input}]};var R=function(){function t(){}return t.forRoot=function(n,e){return void 0===e&&(e=!1),{ngModule:t,providers:[{provide:l,useValue:n,multi:!0},{provide:y,useValue:e}]}},t}();R.decorators=[{type:n.NgModule,args:[{imports:[s.CommonModule,r.ReactiveFormsModule],exports:[w].concat(D,[T]),declarations:[w].concat(D,[T]),providers:[g,m,f]}]}],R.ctorParameters=function(){return[]},t.IDesignComponentModule=R,t.NgComponentDirective=w,t.DesignApiService=g,t.DesignLibraryService=m,t.DESIGN_LIBRARYS=l,t.DesignPropsService=f,t.DESIGN_COMPONENTS=v,t.guid=c,t.ɵf=P,t.ɵd=b,t.ɵj=I,t.ɵc=C,t.ɵg=k,t.ɵh=N,t.ɵi=O,t.ɵb=D,t.ɵe=x,t.ɵk=_,t.ɵa=y,t.ɵm=T,t.ɵl=S,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=meepo-idesign-share.umd.min.js.map

{"version":3,"file":"meepo-idesign-share.umd.min.js","sources":["~/meepo-idesign-share/guid.ts","~/meepo-idesign-share/types.ts","~/meepo-idesign-share/ng-component.ts","~/meepo-idesign-share/design-share.module.ts"],"sourcesContent":["\n/**\n * @return {?}\n */\nexport function guid() {\n/**\n * @return {?}\n */\nfunction S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n","import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n    father?: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\n\n\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { of } from 'rxjs/observable/of';\nimport'rxjs/add/operator/switchMap';\nimport { guid } from './guid';\n\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport const /** @type {?} */ instancesMap: Map<string, { setting: any, view: any }> = new Map();\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n * @param {?} instance\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp,\npublic instance: any\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n/** @type {?} */\nInstanceComponent.prototype.instance;\n}\n\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) {\n        return instancesMap.get(id);\n    }\n/**\n * @param {?} instance\n * @param {?} designLibraryProp\n * @param {?} isPreview\n * @return {?}\n */\nsave(instance: any, designLibraryProp: any, isPreview) {\n        const /** @type {?} */ instanceComponent = new InstanceComponent(instance.guid, designLibraryProp, instance);\n        if (isPreview) {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.view = instanceComponent;\n            } else {\n                map = {\n                    setting: null,\n                    view: instanceComponent\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        } else {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.setting = instanceComponent;\n            } else {\n                map = {\n                    setting: instanceComponent,\n                    view: null\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport const /** @type {?} */ DESIGN_COMPONENTS = new InjectionToken('DESIGN_COMPONENTS');\nimport'rxjs/add/operator/map';\nexport class DesignPropsService {\n    // 所有props\n    props: any[] = [];\n    // 当前页面\n    pageProps: DesignLibraryProp[] = [];\n    // 设置\n    _settingProps: DesignLibraryProp;\n/**\n * @param {?} val\n * @return {?}\n */\nset settingProps(val: DesignLibraryProp) {\n        this._settingProps = val;\n        try {\n            if (!this._settingProps) { \n                this.fathersProps = [];\n            }\n            this.fathers = this.getFather(this.settingProps);\n            if (this.fathers && this.fathers.length > 0) {\n                this.fathersProps = [];\n                this.fathers.map(res => {\n                    const /** @type {?} */ props = this.getPropsByUid(res);\n                    if (props) {\n                        this.fathersProps.push(props);\n                    }\n                });\n            }\n        } catch ( /** @type {?} */err) { }\n    }\n/**\n * @return {?}\n */\nget settingProps() {\n        return this._settingProps;\n    }\n    instance: any;\n    // 多级\n    fathers: any;\n    fathersProps: DesignLibraryProp[] = [];\n\n    historyKey: string = 'historyKey';\n    // 历史记录\n    historys: any[] = [];\n\n    removePosition: number[] = [];\n/**\n * @param {?} props\n */\nconstructor(\n         props: any\n    ) {\n        this.props = flatten(props);\n        try {\n            this.backToHistory();\n        } catch (err) {\n            localStorage.clear();\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\ngetPropsByName(name: string): DesignLibraryProp {\n        let /** @type {?} */ com: DesignLibraryProp;\n        this.props.forEach((item) => {\n            if (name === item.name) {\n                com = item;\n            }\n        });\n        return com;\n    }\n/**\n * @param {?} name\n * @param {?=} father\n * @return {?}\n */\naddPropByName(name: string, father?: string) {\n        const /** @type {?} */ com = this.getPropsByName(name);\n        const /** @type {?} */ deepCopyCom: DesignLibraryProp = this.deepCopy(com);\n        deepCopyCom.uuid = guid();\n        deepCopyCom.father = father || '';\n        this.pageProps.push(deepCopyCom);\n        this.updateHistory();\n    }\n/**\n * @param {?} name\n * @return {?}\n */\naddPropsToInstanceByName(name: string) {\n        let /** @type {?} */ props = this.getPropsByName(name);\n        if (props) {\n            const /** @type {?} */ deepProps = this.deepCopy(props);\n            deepProps.father = this.instance.guid;\n            deepProps.uuid = guid();\n            this.instance.props.children = this.instance.props.children || [];\n            this.instance.props.children.push(deepProps);\n        }\n    }\n/**\n * @return {?}\n */\ntoFatherProps() {\n        console.log(this.fathersProps);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\ndeepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(obj);\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nremovePropsByUid(uuid: string) {\n        uuid = this.trimGuid(uuid);\n        let /** @type {?} */ props = this.getPropsByUid(uuid);\n        if (props) {\n            if (props.father) {\n                let /** @type {?} */ father: any = this.getPropsByUid(props.father);\n                let /** @type {?} */ index = father.props.children.indexOf(props);\n                if (index > -1) {\n                    father.props.children.splice(index, 1);\n                }\n            } else {\n                let /** @type {?} */ index = this.pageProps.indexOf(props);\n                if (index > -1) {\n                    this.pageProps.splice(index, 1);\n                }\n            }\n        }\n        this.updateHistory();\n    }\n/**\n * @param {?} props\n * @param {?=} ids\n * @return {?}\n */\ngetFather(props: DesignLibraryProp, ids: any[] = []) {\n        ids.push(props.uuid);\n        if (props.father) {\n            let /** @type {?} */ father = this.getPropsByUid(props.father);\n            if (father) {\n                ids = this.getFather(( /** @type {?} */((<DesignLibraryProp>father))), ids);\n            }\n        }\n        return ids;\n    }\n/**\n * @param {?} uuid\n * @param {?=} data\n * @return {?}\n */\ngetPropsByUid(uuid: string, data?: DesignLibraryProp[]): DesignLibraryProp | false {\n        data = data || this.pageProps;\n        for (let /** @type {?} */ i = 0; i < data.length; i++) {\n            const /** @type {?} */ item = data[i];\n            if (item.uuid + '' === uuid + '') {\n                return item;\n            } else if (item.props.children) {\n                const /** @type {?} */ res = this.getPropsByUid(uuid, item.props.children);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\ngetHistory(): DesignHistoryProp[] {\n        let /** @type {?} */ local = localStorage.getItem(this.historyKey);\n        if (local) {\n            const /** @type {?} */ items = /** @type {?} */(( JSON.parse(local) as DesignHistoryProp[]));\n            return items;\n        } else {\n            return [];\n        }\n    }\n/**\n * @return {?}\n */\nupdateHistory(): void {\n        this.historys.unshift({\n            name: new Date().toISOString(),\n            data: this.pageProps\n        });\n        if (this.historys.length > 50) {\n            this.historys = this.historys.splice(this.historys.length, this.historys.length - 50);\n        }\n        localStorage.setItem(this.historyKey, JSON.stringify(this.historys));\n    }\n/**\n * @param {?=} item\n * @return {?}\n */\nbackToHistory(item: DesignHistoryProp = null) {\n        if (!item) {\n            item = this.getHistory()[0];\n        }\n        this.pageProps = item.data;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_COMPONENTS, ] }, ]},\n];\n}\n\nfunction DesignPropsService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignPropsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignPropsService.ctorParameters;\n/** @type {?} */\nDesignPropsService.prototype.props;\n/** @type {?} */\nDesignPropsService.prototype.pageProps;\n/** @type {?} */\nDesignPropsService.prototype._settingProps;\n/** @type {?} */\nDesignPropsService.prototype.instance;\n/** @type {?} */\nDesignPropsService.prototype.fathers;\n/** @type {?} */\nDesignPropsService.prototype.fathersProps;\n/** @type {?} */\nDesignPropsService.prototype.historyKey;\n/** @type {?} */\nDesignPropsService.prototype.historys;\n/** @type {?} */\nDesignPropsService.prototype.removePosition;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges, Renderer2, InjectionToken, Inject\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService, DesignPropsService, DesignApiService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nimport { guid } from './guid';\nexport const /** @type {?} */ DRAG_DROP_ALL = new InjectionToken('DRAG_DROP_ALL');\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n     ngComponentInstance: any;\n\n     ngComponentClick: (sm: any, instance: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n * @param {?} api\n * @param {?} props\n * @param {?} render\n * @param {?} dragDropAll\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService,\nprivate api: DesignApiService,\nprivate props: DesignPropsService,\nprivate render: Renderer2,\nprivate dragDropAll: boolean\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            if (designLibraryProp) {\n                let /** @type {?} */ component: Type<any>;\n                const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n                if (this.ngComponentPreview) {\n                    component = libs.view;\n                } else {\n                    component = libs.setting;\n                }\n                const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n                const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                    elInjector.get(ComponentFactoryResolver);\n                const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                    componentFactoryResolver.resolveComponentFactory(component);\n                const /** @type {?} */ componentRef = this.viewContainerRef.createComponent<ReactComponent<any, any>>(\n                    componentFactory,\n                    currentIndex,\n                    elInjector\n                );\n                // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n                const { instance } = componentRef;\n                if (designLibraryProp.props) {\n                    instance.props = designLibraryProp.props;\n                }\n                if (designLibraryProp.state) {\n                    instance.state = designLibraryProp.state;\n                }\n                instance.onClick.subscribe((ev: MouseEvent) => {\n                    if (this.ngComponentPreview) {\n                        this.props.settingProps = designLibraryProp;\n                        this.props.instance = instance;\n                    }\n                });\n                instance.setClass(this.ngComponentClass);\n                instance.setStyle(this.ngComponentStyle);\n                instance.instance = this.ngComponentInstance;\n                if (this.ngComponentDrag || this.dragDropAll) {\n                    this.setDrage(instance);\n                }\n                if (this.ngComponentDrop || this.dragDropAll) {\n                    this.setDrop(instance);\n                }\n                if (designLibraryProp.uuid) {\n                    instance.guid = designLibraryProp.uuid;\n                } else {\n                    designLibraryProp.uuid = instance.guid = guid();\n                }\n                // api\n                this.api.save(instance, designLibraryProp, this.ngComponentPreview);\n            }\n        } catch ( /** @type {?} */err) {\n            console.log(`${this.ngComponentPreview ? 'preview' : 'setting'} is not fond`, item);\n            console.dir(err);\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", 'guid_' + instance.guid);\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate deepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(err);\n            return {};\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            var /** @type {?} */ uuid = this.trimGuid(data);\n            if (!this.isGuid(data)) {\n                // 获取props\n                const /** @type {?} */ props = this.props.getPropsByName(data);\n                instance.props.children = instance.props.children || [];\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                // 记录上级\n                deepProps.father = instance.guid;\n                instance.props.children.push(deepProps);\n                this.props.instance.props.children.push(deepProps)\n            } else if (uuid !== instance.guid) {\n                // 移动已存在props\n                let /** @type {?} */ props = this.getInstanceProps(uuid);\n                if (props) {\n                    const /** @type {?} */ deepProps = this.deepCopy(props);\n                    deepProps.father = instance.guid;\n                    instance.props.children.push(deepProps);\n                }\n            }\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            this.render.removeStyle(ele, 'dashed');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            this.render.setStyle(ele, 'dashed', '1px lodash red');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n{type: DesignApiService, },\n{type: DesignPropsService, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DRAG_DROP_ALL, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentInstance': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentInstance;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n/** @type {?} */\nNgComponentDirective.prototype.api;\n/** @type {?} */\nNgComponentDirective.prototype.props;\n/** @type {?} */\nNgComponentDirective.prototype.render;\n/** @type {?} */\nNgComponentDirective.prototype.dragDropAll;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgComponentDirective, DRAG_DROP_ALL } from './ng-component';\nimport { DESIGN_LIBRARYS, DesignLibraryService, DesignApiService, DesignPropsService } from './types';\nexport class IDesignComponentModule {\n/**\n * @param {?} coms\n * @param {?=} dragDropAll\n * @return {?}\n */\npublic static forRoot(coms: any, dragDropAll: boolean = false): ModuleWithProviders {\n        return {\n            ngModule: IDesignComponentModule,\n            providers: [{\n                provide: DESIGN_LIBRARYS,\n                useValue: coms,\n                multi: true\n            },{\n                provide: DRAG_DROP_ALL,\n                useValue: dragDropAll\n            }]\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        NgComponentDirective\n    ],\n    declarations: [\n        NgComponentDirective\n    ],\n    providers: [\n        DesignApiService,\n        DesignLibraryService,\n        DesignPropsService\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["guid","S4","Math","random","toString","substring","flatten","arr","Array","prototype","concat","apply","DESIGN_LIBRARYS","InjectionToken","instancesMap","Map","InstanceComponent","props","instance","this","DesignApiService","get","id","save","designLibraryProp","isPreview","map","instanceComponent","view","setting","set","decorators","type","Injectable","ctorParameters","DESIGN_COMPONENTS","DesignPropsService","pageProps","fathersProps","historyKey","historys","removePosition","backToHistory","err","localStorage","clear","Object","defineProperty","_settingProps","val","_this","fathers","getFather","settingProps","length","res","getPropsByUid","push","getPropsByName","name","com","forEach","item","addPropByName","father","deepCopyCom","deepCopy","uuid","updateHistory","addPropsToInstanceByName","deepProps","children","toFatherProps","console","log","obj","JSON","parse","stringify","dir","isGuid","indexOf","trimGuid","replace","removePropsByUid","index","splice","ids","data","i","getHistory","local","getItem","unshift","Date","toISOString","setItem","undefined","Inject","args","DesignLibraryService","components","DRAG_DROP_ALL","NgComponentDirective","_viewContainerRef","_template","differs","librarys","api","render","dragDropAll","instances","viewContainerRef","ngDoCheck","_differ","changes","diff","ngComponent","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","createComponent","remove","move","designLibraryProp_1","component","libs","ngComponentPreview","elInjector","parentInjector","componentFactory","moduleRef","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","instance_1","state","onClick","subscribe","ev","setClass","ngComponentClass","setStyle","ngComponentStyle","ngComponentInstance","ngComponentDrag","setDrage","ngComponentDrop","setDrop","ngOnChanges","value","currentValue","find","create","setAttribute","draggable","ele","nativeElement","fromEvent","dataTransfer","setData","stopPropagation","preventDefault","getData","getInstanceProps","removeStyle","Directive","selector","ViewContainerRef","TemplateRef","IterableDiffers","Renderer2","propDecorators","Input","ngComponentState","ngComponentClick","IDesignComponentModule","forRoot","coms","ngModule","providers","provide","useValue","multi","NgModule","imports","exports","declarations"],"mappings":"+cAIA,SAAAA,IAIA,SAAAC,IACQ,OAP+B,OAArB,EAAIC,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GASxE,OAPOJ,IAAQA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,ICErF,SAAAK,EALCC,GAMG,OALOC,MAAMC,UAAUC,OAAOC,SAAUJ,GA0B5C,IACaK,EAAkB,IAAIC,EAAAA,eAAe,mBACrCC,EAAyD,IAAIC,IAM1EC,EAAA,WAWA,OALA,SARehB,EACAiB,EACAC,GAFAC,KAAfnB,KAAeA,EACAmB,KAAfF,MAAeA,EACAE,KAAfD,SAAeA,GAAf,GAaAE,EAAA,WAUA,SAAAA,YAKAA,EAAAX,UAAAY,IAAA,SApBKC,GAqBG,OApBOR,EAAaO,IAAIC,IA4BhCF,EAAAX,UAAAc,KAAA,SAzBKL,EAAAM,EAAAC,GA0BG,IAZQC,EAbFC,EAAoB,IAAIX,EAAkBE,EAASlB,KAAMwB,EAAmBN,GA0B9EO,IAxBIC,EAAMZ,EAAaO,IAAIH,EAASlB,OA2BhC0B,EAzBIE,KAAOD,EAqBzBD,GACWG,QAnBgB,KAoBtBD,KAnBmBD,GA4Bdb,EAzBagB,IAAIZ,EAASlB,KAAM0B,MAE5BA,EAAMZ,EAAaO,IAAIH,EAASlB,OA2BhC0B,EAzBIG,QAAUF,EA2BdD,GACIG,QAzBSF,EA0BTC,KAzBM,MA4Bdd,EAzBagB,IAAIZ,EAASlB,KAAM0B,OAtB5C,GAyBON,EAAPW,aACEC,KAAMC,EAAAA,aAGPb,EAADc,eAAC,WAAA,UA+BD,IAlCaC,EAAoB,IAAItB,EAAAA,eAAe,qBA6CpDuB,EAAA,WAiDA,SAAAA,EACSnB,GA/CLE,KAAJF,SAEIE,KAAJkB,aAkCIlB,KAAJmB,gBAEInB,KAAJoB,WA3CyB,aA6CrBpB,KAAJqB,YAEIrB,KAAJsB,kBAOQtB,KAAKF,MAAQX,EAAQW,GACrB,IACIE,KAAKuB,gBACP,MAAOC,GACLC,aAAaC,gBA5CzBC,OAAAC,eAxCKX,EAwCL3B,UAAA,gBAqBAY,IAAA,WACQ,OA3COF,KAAK6B,eAqBpBlB,IAAA,SAxCKmB,GAwCL,IAAAC,EAAA/B,KACQA,KAxCK6B,cAAgBC,EAyCrB,IAvCS9B,KAAK6B,gBAyCN7B,KAxCKmB,iBA0CTnB,KAxCKgC,QAAUhC,KAAKiC,UAAUjC,KAAKkC,cAyC/BlC,KAxCKgC,SAAWhC,KAAKgC,QAAQG,OAAS,IAyCtCnC,KAxCKmB,gBAyCLnB,KAxCKgC,QAAQzB,IAAI,SAAA6B,GAyCb,IAxCMtC,EAAQiC,EAAKM,cAAcD,GAyC7BtC,GACAiC,EAxCKZ,aAAamB,KAAKxC,MAIrC,MAAA0B,sCA2EVP,EAAA3B,UAAAiD,eAAA,SAhDKC,GAiDG,IAhDIC,EAsDJ,OALAzC,KAhDKF,MAAM4C,QAAQ,SAACC,GAiDZH,IAhDSG,EAAKH,OAiDdC,EAhDME,KAGPF,GAuDfxB,EAAA3B,UAAAsD,cAAA,SApDKJ,EAAAK,GAqDG,IApDMJ,EAAMzC,KAAKuC,eAAeC,GAC1BM,EAAiC9C,KAAK+C,SAASN,GAqDrDK,EApDYE,KAAOnE,IAqDnBiE,EApDYD,OAASA,GAAU,GAqD/B7C,KApDKkB,UAAUoB,KAAKQ,GAqDpB9C,KApDKiD,iBA0DbhC,EAAA3B,UAAA4D,yBAAA,SAvDKV,GAwDG,IAvDI1C,EAAQE,KAAKuC,eAAeC,GAwDhC,GAAI1C,EAvDO,CAwDP,IAvDMqD,EAAYnD,KAAK+C,SAASjD,GAwDhCqD,EAvDUN,OAAS7C,KAAKD,SAASlB,KAwDjCsE,EAvDUH,KAAOnE,IAwDjBmB,KAvDKD,SAASD,MAAMsD,SAAWpD,KAAKD,SAASD,MAAMsD,aAwDnDpD,KAvDKD,SAASD,MAAMsD,SAASd,KAAKa,KA6D9ClC,EAAA3B,UAAA+D,cAAA,WACQC,QAzDQC,IAAIvD,KAAKmB,eA+DzBF,EAAA3B,UAAAyD,SAAA,SA5DKS,GA6DG,IACI,OA5DOC,KAAKC,MAAMD,KAAKE,UAAUH,IACnC,MAAAhC,GA6DE8B,QA5DQM,IAAIJ,KAInBvC,EAAL3B,UAAAuE,OAAK,SAAArB,GAgEG,OA/DOA,EAAKsB,QAAQ,UAAW,GAGlC7C,EAAL3B,UAAAyE,SAAK,SAAAvB,GAmEG,OAlEOA,EAAKwB,QAAQ,QAAS,KAwErC/C,EAAA3B,UAAA2E,iBAAA,SArEKjB,GAsEGA,EArEOhD,KAAK+D,SAASf,GAsErB,IArEIlD,EAAQE,KAAKqC,cAAcW,GAsE/B,GAAIlD,EACA,GAAIA,EArEM+C,OAAQ,CAsEd,IArEIA,EAAc7C,KAAKqC,cAAcvC,EAAM+C,SACvCqB,EAAQrB,EAAO/C,MAAMsD,SAASU,QAAQhE,KAC9B,GAsER+C,EArEO/C,MAAMsD,SAASe,OAAOD,EAAO,OAErC,CAsEH,IArEIA,GAAAA,EAAQlE,KAAKkB,UAAU4C,QAAQhE,KACvB,GAsERE,KArEKkB,UAAUiD,OAAOD,EAAO,GAyEzClE,KArEKiD,iBA4EbhC,EAAA3B,UAAA2C,UAAA,SAzEKnC,EAAAsE,GA2EG,QA3ER,IAAAA,IAAKA,MA0EGA,EAzEI9B,KAAKxC,EAAMkD,MA0EXlD,EAzEM+C,OAAQ,CA0Ed,IAzEIA,EAAS7C,KAAKqC,cAAcvC,EAAM+C,QA0ElCA,IACAuB,EAzEMpE,KAAKiC,UAAC,EAAsCmC,IA4E1D,OAzEOA,GAgFfnD,EAAA3B,UAAA+C,cAAA,SA7EKW,EAAAqB,GA8EGA,EA7EOA,GAAQrE,KAAKkB,UA8EpB,IAAK,IA7EIoD,EAAI,EAAGA,EAAID,EAAKlC,OAAQmC,IAAK,CA8ElC,IA7EM3B,EAAO0B,EAAKC,GA8ElB,GAAI3B,EA7EKK,KAAO,IAAOA,EAAO,GA8E1B,OA7EOL,EACJ,GAAAA,EAAS7C,MAAMsD,SAAU,CA8E5B,IA7EMhB,EAAMpC,KAAKqC,cAAcW,EAAML,EAAK7C,MAAMsD,UA8EhD,GAAIhB,EACA,OA7EOA,GAiFnB,OA7EO,GAkFfnB,EAAA3B,UAAAiF,WAAA,WACQ,IA/EIC,EAAQ/C,aAAagD,QAAQzE,KAAKoB,YAgFtC,OAAIoD,EA9Ecf,KAAKC,MAAMc,OAwFrCvD,EAAA3B,UAAA2D,cAAA,WACQjD,KAjFKqB,SAASqD,SAkFVlC,MAjFM,IAAImC,MAAOC,cAkFjBP,KAjFMrE,KAAKkB,YAmFXlB,KAjFKqB,SAASc,OAAS,KAkFvBnC,KAjFKqB,SAAWrB,KAAKqB,SAAS8C,OAAOnE,KAAKqB,SAASc,OAAQnC,KAAKqB,SAASc,OAAS,KAmFtFV,aAjFaoD,QAAQ7E,KAAKoB,WAAYqC,KAAKE,UAAU3D,KAAKqB,YAuFlEJ,EAAA3B,UAAAiC,cAAA,SApFKoB,QAAL,IAAAA,IAAKA,EAAL,MACaA,IAqFDA,EApFO3C,KAAKuE,aAAa,IAsF7BvE,KApFKkB,UAAYyB,EAAK0B,QAzI9B,GA2IOpD,EAAPL,aACEC,KAAMC,EAAAA,aAGPG,EAADF,eAAC,WAAA,QAuFAF,KAAMiE,UAAWlE,aAAeC,KAAMkE,EAAAA,OAAQC,MAAOhE,QAItD,IAAAiE,EAAA,WAiCA,SAAAA,EACSC,GAtHGlF,KAAZkF,cAwHQlF,KAAKkF,WAAa/F,EAAQ+F,UAMlCD,EAAA3F,UAAAY,IAAA,SAxHKsC,GAyHG,IAxHIC,EA8HJ,OALAzC,KAxHKkF,WAAW3E,IAAI,SAAAoC,GAyHZA,EAxHKH,KAyHLC,EAxHME,EAAKH,MAGZC,KAuEf,GArEOwC,EAAPrE,aACEC,KAAMC,EAAAA,aAGPmE,EAADlE,eAAC,WAAA,QA2HAF,KAAMiE,UAAWlE,aAAeC,KAAMkE,EAAAA,OAAQC,MAAOvF,QC7Y/C,IAAM0F,EAAgB,IAAIzF,EAAAA,eAAe,iBAChD0F,EAAA,WAkCA,SAAAA,EAPgBC,EACAC,EACAC,EACAC,EACAC,EACA3F,EACA4F,EACCC,GAPD3F,KAAhBqF,kBAAgBA,EACArF,KAAhBsF,UAAgBA,EACAtF,KAAhBuF,QAAgBA,EACAvF,KAAhBwF,SAAgBA,EACAxF,KAAhByF,IAAgBA,EACAzF,KAAhBF,MAAgBA,EACAE,KAAhB0F,OAAgBA,EACC1F,KAAjB2F,YAAiBA,EAZb3F,KAAJ4F,aAsBQ5F,KAAK6F,iBAAmBR,SAKhCD,EAAA9F,UAAAwG,UAAA,WAAA,IAAA/D,EAAA/B,KACQ,GAAIA,KAVK+F,QAAS,CAWd,IAVMC,EAAUhG,KAAK+F,QAAQE,KAAKjG,KAAKkG,aAWnCF,GACAA,EAVQG,iBAAiB,SAACxD,EAAiCyD,EAA+BC,GAWtF,GAV0B,MAUtB1D,EAVK2D,cAWLvE,EAVKwE,gBAAgB5D,EAAM0D,QACxB,GAAoB,MAApBA,EAWHtE,EAVKsD,kBAAkBmB,OAAOJ,OAC3B,CAWH,IAVM3F,EAAOsB,EAAKsD,kBAAkBnF,IAAIkG,GAWxCrE,EAVKsD,kBAAkBoB,KAAKhG,EAAM4F,QAOrDjB,EAAL9F,UAAAiH,gBAAK,SAAA5D,EAAA0D,GAAA,IAALtE,EAAA/B,KAeQ,IACI,IAdM0G,EAAuC/D,EAAKA,KAelD,GAAI+D,EAdmB,CAenB,IAdIC,OAcpB,EAbsBC,EAAO5G,KAAKwF,SAAStF,IAAIwG,EAAkBlE,MAgB7CmE,EADA3G,KAdK6G,mBACOD,EAAKnG,KAELmG,EAAKlG,QAgBrB,IAdMoG,EAAa9G,KAAK6F,iBAAiBkB,eAGnCC,GAFqDhH,KAAKiH,UAAYjH,KAAKiH,UAAUC,yBAevFJ,EAdW5G,IAAIiH,EAAAA,2BAEUC,wBAAwBT,GAO7CU,EANarH,KAAK6F,iBAAiBU,gBAevCS,EACAX,EACAS,GAXpB/G,SAeoB2G,EAdkB5G,QAelBuH,EAdSvH,MAAQ4G,EAAkB5G,OAgBnC4G,EAdkBY,QAelBD,EAdSC,MAAQZ,EAAkBY,OAgBvCD,EAdSE,QAAQC,UAAU,SAACC,GAepB1F,EAdK8E,qBAeL9E,EAdKjC,MAAMoC,aAAewE,EAe1B3E,EAdKjC,MAAMC,SAAWsH,KAiB9BA,EAdSK,SAAS1H,KAAK2H,kBAevBN,EAdSO,SAAS5H,KAAK6H,kBAevBR,EAdStH,SAAWC,KAAK8H,qBAerB9H,KAdK+H,iBAAmB/H,KAAK2F,cAe7B3F,KAdKgI,SAASX,IAgBdrH,KAdKiI,iBAAmBjI,KAAK2F,cAe7B3F,KAdKkI,QAAQb,GAgBbX,EAdkB1D,KAelBqE,EAdSxI,KAAO6H,EAAkB1D,KAgBlC0D,EAdkB1D,KAAOqE,EAASxI,KAAOA,IAiB7CmB,KAdKyF,IAAIrF,KAAKiH,EAAUX,EAAmB1G,KAAK6G,qBAEtD,MAAArF,GAeE8B,QAdQC,KAAKvD,KAAO6G,mBAAqB,UAAY,WAcjE,eAd0FlE,GAe9EW,QAdQM,IAAIpC,KAqBxB4D,EAAA9F,UAAA6I,YAAA,SAjBKnC,GAmBG,GADAhG,KAjBK6F,iBAAiBnE,QAkBlB,gBAjBiBsE,EAAS,CAkB1B,IAjBMoC,EAAQpC,EAAS,YAAcqC,aAkBrC,GAAID,IAjBSpI,KAAM+F,QAkBf,IACI/F,KAjBK+F,QAAU/F,KAAKuF,QAAQ+C,KAAKF,GAAOG,SAC1C,MAAA/G,OAKb4D,EAAL9F,UAAA0I,SAAK,SAAAjI,GAqBGA,EApBSyI,cAqBLC,WApBW,IAsBf,IApBMC,EAAM3I,EAAS2I,IAAIC,cAsBzBC,EAAAA,UApBUF,EAAK,aAAalB,UAAU,SAACC,GAC5B1H,EAASlB,KAqBhB4I,EApBGoB,aAAaC,QAAQ,OAAQ,QAAU/I,EAASlB,MAqBnD4I,EApBGsB,oBAsBPH,EAAAA,UApBUF,EAAK,WAAWlB,UAAU,SAACC,OAMxCrC,EAAL9F,UAAAuE,OAAK,SAAArB,GAwBG,OAvBOA,EAAKsB,QAAQ,UAAW,GAGlCsB,EAAL9F,UAAAyE,SAAK,SAAAvB,GA2BG,OA1BOA,EAAKwB,QAAQ,QAAS,KAGhCoB,EAAL9F,UAAAyD,SAAK,SAAAS,GA8BG,IACI,OA7BOC,KAAKC,MAAMD,KAAKE,UAAUH,IACnC,MAAAhC,GA+BE,OADA8B,QA7BQM,IAAIpC,QAKnB4D,EAAL9F,UAAA4I,QAAK,SAAAnI,GAAA,IAALgC,EAAA/B,KACc0I,EAAM3I,EAAS2I,IAAIC,cAiCzBC,EAAAA,UAhCUF,EAAK,QAAQlB,UAAU,SAACC,GAiC9BA,EAhCGuB,iBAiCHvB,EAhCGsB,kBAiCH,IAhCI1E,EAAOoD,EAAGoB,aAAaI,QAAQ,QAC/BjG,EAAOjB,EAAKgC,SAASM,GAiCzB,GAhCKtC,EAAK8B,OAAOQ,IASV,GAAArB,IAAajD,EAASlB,KAAM,CAmC/B,GAjCIiB,EAAQiC,EAAKmH,iBAAiBlG,IAExBG,EAAYpB,EAAKgB,SAASjD,IACtB+C,OAAS9C,EAASlB,KAiC5BkB,EAhCSD,MAAMsD,SAASd,KAAKa,QAfb,CAkCpB,IA9BMA,EAFArD,EAAQiC,EAAKjC,MAAMyC,eAAe8B,GAiCxCtE,EAhCSD,MAAMsD,SAAWrD,EAASD,MAAMsD,cACnCD,EAAYpB,EAAKgB,SAASjD,IAEtB+C,OAAS9C,EAASlB,KAiC5BkB,EAhCSD,MAAMsD,SAASd,KAAKa,GAiC7BpB,EAhCKjC,MAAMC,SAASD,MAAMsD,SAASd,KAAKa,MA2ChDyF,EAAAA,UAhCUF,EAAK,aAAalB,UAAU,SAACC,GAkCnC1F,EAhCK2D,OAAOyD,YAAYT,EAAK,UAiC7BjB,EAhCGuB,iBAiCHvB,EAhCGsB,oBAkCPH,EAAAA,UAhCUF,EAAK,YAAYlB,UAAU,SAACC,GAiClC1F,EAhCK2D,OAAOkC,SAASc,EAAK,SAAU,kBAiCpCjB,EAhCGuB,iBAiCHvB,EAhCGsB,qBAIV3D,EAAL9F,UAAA4J,iBAAK,SAAAlG,GAoCG,IAnCIlD,EAyCJ,OALAE,KAnCK4F,UAAUrF,IAAI,SAAA6B,GAoCXA,EAnCIvD,OAASmE,IAoCblD,EAnCQsC,EAAItC,SAGbA,KA/Mf,GAiNOsF,EAAPxE,aACEC,KAAMuI,EAAAA,UAAWpE,OAASqE,SAAU,oBAGrCjE,EAADrE,eAAC,WAAA,QAsCAF,KAAMyI,EAAAA,mBACNzI,KAAM0I,EAAAA,cACN1I,KAAM2I,EAAAA,kBACN3I,KAAMoE,IACNpE,KAAMZ,IACNY,KAAMI,IACNJ,KAAM4I,EAAAA,YACN5I,KAAMiE,UAAWlE,aAAeC,KAAMkE,EAAAA,OAAQC,MAAOG,QAnC/CC,EAAPsE,gBAsCAxD,cArCkBrF,KAAM8I,EAAAA,QAsCxB9C,qBArCyBhG,KAAM8I,EAAAA,QAsC/BC,mBArCuB/I,KAAM8I,EAAAA,QAsC7BhC,mBArCuB9G,KAAM8I,EAAAA,QAsC7B9B,mBArCuBhH,KAAM8I,EAAAA,QAsC7B5B,kBArCsBlH,KAAM8I,EAAAA,QAsC5B1B,kBArCsBpH,KAAM8I,EAAAA,QAsC5B7B,sBArC0BjH,KAAM8I,EAAAA,QAsChCE,mBArCuBhJ,KAAM8I,EAAAA,SCrP7B,IAAAG,EAAA,WAAA,SAAAA,YAGKA,EAALC,QAAK,SAAAC,EAAArE,GAIG,YAJR,IAAAA,IAAKA,GAAL,IAKYsE,SAHUH,EAIVI,YACIC,QAHS1K,EAIT2K,SAHUJ,EAIVK,OAHO,IAKPF,QAHShF,EAITiF,SAHUzE,QAZ1B,GAgBOmE,EAAPlJ,aACEC,KAAMyJ,EAAAA,SAAUtF,OAIduF,WACAC,SACIpF,GAEJqF,cACIrF,GAEJ8E,WACIjK,EACAgF,EACAhE,OAEP6I,EAAD/I,eAAC,WAAA"}

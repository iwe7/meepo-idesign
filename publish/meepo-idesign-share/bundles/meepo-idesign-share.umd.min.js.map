{"version":3,"file":"meepo-idesign-share.umd.min.js","sources":["~/meepo-idesign-share/types.ts","~/meepo-idesign-share/ng-component.ts","~/meepo-idesign-share/design-share.module.ts"],"sourcesContent":["import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) { }\n/**\n * @param {?} data\n * @param {?} id\n * @return {?}\n */\nsave(data: any, id: string) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport const /** @type {?} */ DESIGN_COMPONENTS = new InjectionToken('DESIGN_COMPONENTS');\nexport class DesignPropsService {\n    // 所有props\n    props: any[] = [];\n    // 当前页面\n    pageProps: any[] = [];\n    // 设置\n    settingProps: any = {};\n\n    historyKey: string = 'historyKey';\n    // 历史记录\n    historys: any[] = [];\n/**\n * @param {?} props\n */\nconstructor(\n         props: any\n    ) {\n        this.props = flatten(props);\n        try {\n            this.backToHistory();\n        } catch (err) {\n            localStorage.clear();\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\ngetPropsByName(name: string): DesignLibraryProp {\n        let /** @type {?} */ com: DesignLibraryProp;\n        this.props.forEach((item) => {\n            if (name === item.name) {\n                com = item;\n            }\n        });\n        return com;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\naddPropByName(name: string){\n        const /** @type {?} */ com = this.getPropsByName(name);\n        this.pageProps.push(com);\n        this.updateHistory();\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nremovePropsByUid(uuid: string) {\n        let /** @type {?} */ thisIndex: any;\n        this.pageProps.map((res: DesignLibraryProp, index: number) => {\n            if (res.uuid === uuid) {\n                thisIndex = index;\n            }\n        });\n        this.pageProps.splice(thisIndex, 1);\n        this.updateHistory();\n    }\n/**\n * @return {?}\n */\ngetHistory(): DesignHistoryProp[] {\n        let /** @type {?} */ local = localStorage.getItem(this.historyKey);\n        if (local) {\n            const /** @type {?} */ items = /** @type {?} */(( JSON.parse(local) as DesignHistoryProp[]));\n            return items;\n        } else {\n            return [];\n        }\n    }\n/**\n * @return {?}\n */\nupdateHistory(): void {\n        this.historys.unshift({\n            name: new Date().toISOString(),\n            data: this.pageProps\n        });\n        if (this.historys.length > 50) {\n            this.historys = this.historys.splice(this.historys.length, this.historys.length - 50);\n        }\n        localStorage.setItem(this.historyKey, JSON.stringify(this.historys));\n    }\n/**\n * @param {?=} item\n * @return {?}\n */\nbackToHistory(item: DesignHistoryProp = null) {\n        if (!item) {\n            item = this.getHistory()[0];\n        }\n        this.pageProps = item.data;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_COMPONENTS, ] }, ]},\n];\n}\n\nfunction DesignPropsService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignPropsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignPropsService.ctorParameters;\n/** @type {?} */\nDesignPropsService.prototype.props;\n/** @type {?} */\nDesignPropsService.prototype.pageProps;\n/** @type {?} */\nDesignPropsService.prototype.settingProps;\n/** @type {?} */\nDesignPropsService.prototype.historyKey;\n/** @type {?} */\nDesignPropsService.prototype.historys;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n        console.log('DesignLibraryService', this.components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges, Renderer2\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService, DesignPropsService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n\n     ngComponentClick: (sm: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n * @param {?} props\n * @param {?} render\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService,\nprivate props: DesignPropsService,\nprivate render: Renderer2\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            if (designLibraryProp) {\n                let /** @type {?} */ component: Type<any>;\n                const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n                if (this.ngComponentPreview) {\n                    component = libs.view;\n                } else {\n                    component = libs.setting;\n                }\n                const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n                const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                    elInjector.get(ComponentFactoryResolver);\n                const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                    componentFactoryResolver.resolveComponentFactory(component);\n                const /** @type {?} */ componentRef = this.viewContainerRef.createComponent<ReactComponent<any, any>>(\n                    componentFactory,\n                    currentIndex,\n                    elInjector\n                );\n                // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n                if (designLibraryProp.props) {\n                    componentRef.instance.props = designLibraryProp.props;\n                }\n                if (designLibraryProp.state) {\n                    componentRef.instance.state = designLibraryProp.state;\n                }\n                componentRef.instance.onClick.subscribe(res => {\n                    this.ngComponentClick && this.ngComponentClick(designLibraryProp)\n                });\n                componentRef.instance.setClass(this.ngComponentClass);\n                componentRef.instance.setStyle(this.ngComponentStyle);\n                if (this.ngComponentDrag) {\n                    this.setDrage(componentRef.instance);\n                }\n                if (this.ngComponentDrop) {\n                    this.setDrop(componentRef.instance);\n                }\n                designLibraryProp.uuid = componentRef.instance.guid;\n                const /** @type {?} */ instanceComponent = new InstanceComponent(componentRef.instance.guid, designLibraryProp);\n                this.instances.push(instanceComponent);\n            }\n        } catch ( /** @type {?} */err) {\n            console.log(`${this.ngComponentPreview ? 'preview' : 'setting'} is not fond`, item);\n            console.dir(err);\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", 'guid_' + instance.guid);\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            var /** @type {?} */ uuid = this.trimGuid(data);\n            console.log(instance, data);\n            if (!this.isGuid(data)) {\n                // 获取props\n                const /** @type {?} */ props = this.props.getPropsByName(data);\n                instance.props.children = instance.props.children || [];\n                instance.props.children.push(props);\n            } else if(uuid !== instance.guid){\n                // 移动已存在props\n                let /** @type {?} */ props = this.getInstanceProps(uuid);\n                if (props) {\n                    instance.props.children.push(props);\n                }\n            }\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            this.render.removeStyle(ele, 'dashed');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            this.render.setStyle(ele, 'dashed', '1px lodash red');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n{type: DesignPropsService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n/** @type {?} */\nNgComponentDirective.prototype.props;\n/** @type {?} */\nNgComponentDirective.prototype.render;\n}\n\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgComponentDirective } from './ng-component';\nimport { DESIGN_LIBRARYS, DesignLibraryService, DesignApiService, DesignPropsService } from './types';\nexport class IDesignComponentModule {\n/**\n * @param {?} coms\n * @return {?}\n */\npublic static forRoot(coms: any): ModuleWithProviders {\n        return {\n            ngModule: IDesignComponentModule,\n            providers: [{\n                provide: DESIGN_LIBRARYS,\n                useValue: coms,\n                multi: true\n            }]\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        NgComponentDirective\n    ],\n    declarations: [\n        NgComponentDirective\n    ],\n    providers: [\n        DesignApiService,\n        DesignLibraryService,\n        DesignPropsService\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["flatten","arr","Array","prototype","concat","apply","DESIGN_LIBRARYS","InjectionToken","DesignApiService","get","id","save","data","decorators","type","Injectable","ctorParameters","DESIGN_COMPONENTS","DesignPropsService","props","this","pageProps","settingProps","historyKey","historys","backToHistory","err","localStorage","clear","getPropsByName","name","com","forEach","item","addPropByName","push","updateHistory","removePropsByUid","uuid","thisIndex","map","res","index","splice","getHistory","local","getItem","JSON","parse","unshift","Date","toISOString","length","setItem","stringify","undefined","Inject","args","DesignLibraryService","components","console","log","NgComponentDirective","_viewContainerRef","_template","differs","librarys","render","instances","viewContainerRef","ngDoCheck","_this","_differ","changes","diff","ngComponent","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","createComponent","remove","view","move","designLibraryProp_1","component","libs","ngComponentPreview","setting","elInjector","parentInjector","componentFactory","moduleRef","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","componentRef","instance","state","onClick","subscribe","ngComponentClick","setClass","ngComponentClass","setStyle","ngComponentStyle","ngComponentDrag","setDrage","ngComponentDrop","setDrop","guid","instanceComponent","InstanceComponent","dir","ngOnChanges","value","currentValue","find","create","setAttribute","draggable","ele","nativeElement","fromEvent","ev","dataTransfer","setData","isGuid","indexOf","trimGuid","replace","preventDefault","stopPropagation","getData","getInstanceProps","children","removeStyle","Directive","selector","ViewContainerRef","TemplateRef","IterableDiffers","Renderer2","propDecorators","Input","ngComponentState","IDesignComponentModule","forRoot","coms","ngModule","providers","provide","useValue","multi","NgModule","imports","exports","declarations"],"mappings":"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"}

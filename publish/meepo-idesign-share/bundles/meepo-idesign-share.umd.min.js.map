{"version":3,"file":"meepo-idesign-share.umd.min.js","sources":["~/meepo-idesign-share/guid.ts","~/meepo-idesign-share/types.ts","~/meepo-idesign-share/ng-component.ts","~/meepo-idesign-share/components/color/color.ts","~/meepo-idesign-share/components/size/size.ts","~/meepo-idesign-share/components/background/background.ts","~/meepo-idesign-share/components/public_api.ts","~/meepo-idesign-share/design-share.module.ts"],"sourcesContent":["\n/**\n * @return {?}\n */\nexport function guid() {\n/**\n * @return {?}\n */\nfunction S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n","import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n    father?: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\n\n\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { of } from 'rxjs/observable/of';\nimport'rxjs/add/operator/switchMap';\nimport { guid } from './guid';\n\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport const /** @type {?} */ instancesMap: Map<string, { setting: any, view: any }> = new Map();\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n * @param {?} instance\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp,\npublic instance: any\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n/** @type {?} */\nInstanceComponent.prototype.instance;\n}\n\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) {\n        return instancesMap.get(id);\n    }\n/**\n * @param {?} instance\n * @param {?} designLibraryProp\n * @param {?} isPreview\n * @return {?}\n */\nsave(instance: any, designLibraryProp: any, isPreview) {\n        const /** @type {?} */ instanceComponent = new InstanceComponent(instance.guid, designLibraryProp, instance);\n        if (isPreview) {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.view = instanceComponent;\n            } else {\n                map = {\n                    setting: null,\n                    view: instanceComponent\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        } else {\n            let /** @type {?} */ map = instancesMap.get(instance.guid);\n            if (map) {\n                map.setting = instanceComponent;\n            } else {\n                map = {\n                    setting: instanceComponent,\n                    view: null\n                }\n            }\n            instancesMap.set(instance.guid, map);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport const /** @type {?} */ DESIGN_COMPONENTS = new InjectionToken('DESIGN_COMPONENTS');\nimport'rxjs/add/operator/map';\nexport class DesignPropsService {\n    // 所有props\n    props: any[] = [];\n    // 当前页面\n    pageProps: DesignLibraryProp[] = [];\n    // 设置\n    _settingProps: DesignLibraryProp;\n/**\n * @param {?} val\n * @return {?}\n */\nset settingProps(val: DesignLibraryProp) {\n        this._settingProps = val;\n        try {\n            if (!this._settingProps) {\n                this.fathersProps = [];\n            }\n            this.fathers = this.getFather(this.settingProps);\n            if (this.fathers && this.fathers.length > 0) {\n                this.fathersProps = [];\n                this.fathers.map(res => {\n                    const /** @type {?} */ props = this.getPropsByUid(res);\n                    if (props) {\n                        this.fathersProps.push(props);\n                    }\n                });\n            }\n        } catch ( /** @type {?} */err) { }\n    }\n/**\n * @return {?}\n */\nget settingProps() {\n        return this._settingProps;\n    }\n    instance: any;\n    // 多级\n    fathers: any;\n    fathersProps: DesignLibraryProp[] = [];\n\n    historyKey: string = 'historyKey';\n    // 历史记录\n    historys: any[] = [];\n\n    removePosition: number[] = [];\n/**\n * @param {?} props\n * @param {?} library\n */\nconstructor(\n         props: any,\npublic library: DesignLibraryService\n    ) {\n        this.props = flatten(props);\n        try {\n            this.backToHistory();\n        } catch (err) {\n            localStorage.clear();\n        }\n    }\n/**\n * @param {?} designLibraryProp\n * @param {?} instance\n * @return {?}\n */\nsetActiveSettingProps(designLibraryProp: any, instance: any) {\n        this.settingProps = designLibraryProp;\n        console.log(instance);\n        if (this.instance) {\n            this.instance.removeClass('is-focus');\n        }\n        this.instance = instance;\n        instance.addClass('is-focus');\n        // instance.render.addClass(instance.ele.nativeElement,'is-focus');\n    }\n/**\n * @param {?} name\n * @return {?}\n */\ngetPropsByName(name: string): DesignLibraryProp {\n        let /** @type {?} */ com: DesignLibraryProp;\n        this.props.forEach((item) => {\n            if (name === item.name) {\n                com = item;\n            }\n        });\n        return com;\n    }\n/**\n * @param {?} name\n * @param {?=} father\n * @return {?}\n */\naddPropByName(name: string, father?: string) {\n        const /** @type {?} */ com = this.getPropsByName(name);\n        const /** @type {?} */ deepCopyCom: DesignLibraryProp = this.deepCopy(com);\n        if (deepCopyCom) {\n            if (deepCopyCom.uuid) {\n                // 交换位置\n            } else {\n                deepCopyCom.uuid = guid();\n                deepCopyCom.father = father || '';\n                const /** @type {?} */ lib = this.library.get(deepCopyCom.name);\n                deepCopyCom.props = new lib.default();\n                this.pageProps.push(deepCopyCom);\n                this.updateHistory();\n            }\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\naddPropsToInstanceByName(name: string) {\n        let /** @type {?} */ props = this.getPropsByName(name);\n        if (props) {\n            if (this.instance) {\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                deepProps.father = this.instance.guid;\n                const /** @type {?} */ lib = this.library.get(deepProps.name);\n                deepProps.props = new lib.default();\n                deepProps.uuid = guid();\n                this.instance.props.children = this.instance.props.children || [];\n                this.instance.props.children.push(deepProps);\n            } else {\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                deepProps.father = null;\n                const /** @type {?} */ lib = this.library.get(deepProps.name);\n                deepProps.props = new lib.default();\n                deepProps.uuid = guid();\n                this.pageProps.push(deepProps);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ntoFatherProps() {\n        console.log(this.fathersProps);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\ndeepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(obj);\n        }\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nremovePropsByUid(uuid: string) {\n        uuid = this.trimGuid(uuid);\n        let /** @type {?} */ props = this.getPropsByUid(uuid);\n        if (props) {\n            if (props.father) {\n                let /** @type {?} */ father: any = this.getPropsByUid(props.father);\n                let /** @type {?} */ index = father.props.children.indexOf(props);\n                if (index > -1) {\n                    father.props.children.splice(index, 1);\n                }\n            } else {\n                let /** @type {?} */ index = this.pageProps.indexOf(props);\n                if (index > -1) {\n                    this.pageProps.splice(index, 1);\n                }\n            }\n        }\n        this.updateHistory();\n    }\n/**\n * @param {?} props\n * @param {?=} ids\n * @return {?}\n */\ngetFather(props: DesignLibraryProp, ids: any[] = []) {\n        ids.push(props.uuid);\n        if (props.father) {\n            let /** @type {?} */ father = this.getPropsByUid(props.father);\n            if (father) {\n                ids = this.getFather(( /** @type {?} */((<DesignLibraryProp>father))), ids);\n            }\n        }\n        return ids;\n    }\n/**\n * @param {?} uuid\n * @param {?=} data\n * @return {?}\n */\ngetPropsByUid(uuid: string, data?: DesignLibraryProp[]): DesignLibraryProp | false {\n        data = data || this.pageProps;\n        for (let /** @type {?} */ i = 0; i < data.length; i++) {\n            const /** @type {?} */ item = data[i];\n            if (item.uuid + '' === uuid + '') {\n                return item;\n            } else if (item.props.children) {\n                const /** @type {?} */ res = this.getPropsByUid(uuid, item.props.children);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\ngetHistory(): DesignHistoryProp[] {\n        let /** @type {?} */ local = localStorage.getItem(this.historyKey);\n        if (local) {\n            const /** @type {?} */ items = /** @type {?} */(( JSON.parse(local) as DesignHistoryProp[]));\n            return items;\n        } else {\n            return [];\n        }\n    }\n/**\n * @return {?}\n */\nupdateHistory(): void {\n        this.historys.unshift({\n            name: new Date().toISOString(),\n            data: this.pageProps\n        });\n        if (this.historys.length > 50) {\n            this.historys = this.historys.splice(this.historys.length, this.historys.length - 50);\n        }\n        localStorage.setItem(this.historyKey, JSON.stringify(this.historys));\n    }\n/**\n * @param {?=} item\n * @return {?}\n */\nbackToHistory(item: DesignHistoryProp = null) {\n        if (!item) {\n            item = this.getHistory()[0];\n        }\n        this.pageProps = item.data;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_COMPONENTS, ] }, ]},\n{type: DesignLibraryService, },\n];\n}\n\nfunction DesignPropsService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignPropsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignPropsService.ctorParameters;\n/** @type {?} */\nDesignPropsService.prototype.props;\n/** @type {?} */\nDesignPropsService.prototype.pageProps;\n/** @type {?} */\nDesignPropsService.prototype._settingProps;\n/** @type {?} */\nDesignPropsService.prototype.instance;\n/** @type {?} */\nDesignPropsService.prototype.fathers;\n/** @type {?} */\nDesignPropsService.prototype.fathersProps;\n/** @type {?} */\nDesignPropsService.prototype.historyKey;\n/** @type {?} */\nDesignPropsService.prototype.historys;\n/** @type {?} */\nDesignPropsService.prototype.removePosition;\n/** @type {?} */\nDesignPropsService.prototype.library;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges, Renderer2, InjectionToken, Inject\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService, DesignPropsService, DesignApiService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nimport { guid } from './guid';\nexport const /** @type {?} */ DRAG_DROP_ALL = new InjectionToken('DRAG_DROP_ALL');\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n     ngComponentInstance: any;\n\n     ngComponentClick: (sm: any, instance: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n * @param {?} api\n * @param {?} props\n * @param {?} render\n * @param {?} dragDropAll\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService,\nprivate api: DesignApiService,\nprivate props: DesignPropsService,\nprivate render: Renderer2,\nprivate dragDropAll: boolean\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            if (designLibraryProp) {\n                let /** @type {?} */ component: Type<any>;\n                const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n                if (this.ngComponentPreview) {\n                    component = libs.view;\n                } else {\n                    component = libs.setting;\n                }\n                const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n                const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                    elInjector.get(ComponentFactoryResolver);\n                const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                    componentFactoryResolver.resolveComponentFactory(component);\n                const /** @type {?} */ componentRef = this.viewContainerRef.createComponent<ReactComponent<any, any>>(\n                    componentFactory,\n                    currentIndex,\n                    elInjector\n                );\n                // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n                const { instance } = componentRef;\n                if (designLibraryProp.props) {\n                    instance.props = designLibraryProp.props;\n                }\n                if (designLibraryProp.state) {\n                    instance.state = designLibraryProp.state;\n                }\n                instance.onClick.subscribe((ev: MouseEvent) => {\n                    if (this.ngComponentPreview) {\n                        this.props.setActiveSettingProps(designLibraryProp, instance);\n                        ev.stopPropagation();\n                    }\n                });\n                instance.setClass(this.ngComponentClass);\n                instance.setStyle(this.ngComponentStyle);\n                instance.instance = this.ngComponentInstance;\n                if (this.ngComponentDrag || this.dragDropAll) {\n                    this.setDrage(instance);\n                }\n                if (this.ngComponentDrop || this.dragDropAll) {\n                    // this.setDrop(instance);\n                }\n                if (designLibraryProp.uuid) {\n                    instance.guid = designLibraryProp.uuid;\n                } else {\n                    designLibraryProp.uuid = instance.guid = guid();\n                }\n                // api\n                this.api.save(instance, designLibraryProp, this.ngComponentPreview);\n            }\n        } catch ( /** @type {?} */err) {\n            console.log(`${this.ngComponentPreview ? 'preview' : 'setting'} is not fond`, item);\n            console.dir(err);\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", 'guid_' + instance.guid);\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate isGuid(name: string) {\n        return name.indexOf('guid_') > -1;\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate trimGuid(name: string) {\n        return name.replace('guid_', '');\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate deepCopy(obj: any) {\n        try {\n            return JSON.parse(JSON.stringify(obj));\n        } catch ( /** @type {?} */err) {\n            console.dir(err);\n            return {};\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            var /** @type {?} */ uuid = this.trimGuid(data);\n            if (!this.isGuid(data)) {\n                // 获取props\n                const /** @type {?} */ props = this.props.getPropsByName(data);\n                instance.props.children = instance.props.children || [];\n                const /** @type {?} */ deepProps = this.deepCopy(props);\n                // 记录上级\n                deepProps.father = instance.guid;\n                instance.props.children.push(deepProps);\n                this.props.instance.props.children.push(deepProps)\n            } else if (uuid !== instance.guid) {\n                // 移动已存在props\n                let /** @type {?} */ props = this.getInstanceProps(uuid);\n                if (props) {\n                    const /** @type {?} */ deepProps = this.deepCopy(props);\n                    deepProps.father = instance.guid;\n                    instance.props.children.push(deepProps);\n                }\n            }\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            this.render.removeStyle(ele, 'dashed');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            this.render.setStyle(ele, 'dashed', '1px lodash red');\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n{type: DesignApiService, },\n{type: DesignPropsService, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DRAG_DROP_ALL, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentInstance': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentInstance;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n/** @type {?} */\nNgComponentDirective.prototype.api;\n/** @type {?} */\nNgComponentDirective.prototype.props;\n/** @type {?} */\nNgComponentDirective.prototype.render;\n/** @type {?} */\nNgComponentDirective.prototype.dragDropAll;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nexport class ShareColorComponent implements OnInit {\n     props: FormGroup;\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-color',\n    template: `\n      <div class=\"row\" [formGroup]=\"props\">\n          <input type=\"color\" placeholder=\"背景色\" [formControlName]=\"'background-color'\">\n          <input type=\"color\" placeholder=\"前景色\" [formControlName]=\"'color'\">\n      </div>\n    `,\n    styles: [`\n      .row {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        width: 100%;\n        margin-top: 5px; }\n        .row input {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          width: 50%; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'props': [{ type: Input },],\n};\n}\n\nfunction ShareColorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareColorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareColorComponent.ctorParameters;\n/** @type {?} */\nShareColorComponent.propDecorators;\n/** @type {?} */\nShareColorComponent.prototype.props;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nexport class ShareSizeComponent implements OnInit {\n     props: FormGroup;\n     unit: string[] = ['%', 'px']\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-size',\n    template: `\n      <div class=\"row\" [formGroup]=\"props\">\n          <input type=\"number\" placeholder=\"宽度/%\" [formControlName]=\"'width.'+unit[0]\">\n          <input type=\"number\" placeholder=\"高度/px\" [formControlName]=\"'height.'+unit[0]\">\n      </div>\n    `,\n    styles: [`\n      .row {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        width: 100%;\n        margin-top: 5px; }\n        .row input {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          width: 50%; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'props': [{ type: Input },],\n'unit': [{ type: Input },],\n};\n}\n\nfunction ShareSizeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareSizeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareSizeComponent.ctorParameters;\n/** @type {?} */\nShareSizeComponent.propDecorators;\n/** @type {?} */\nShareSizeComponent.prototype.props;\n/** @type {?} */\nShareSizeComponent.prototype.unit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nexport interface ShareBackgroundProps {\n    background: string | null;\n    backgroundAttachment: string | null;\n    backgroundClip: string | null;\n    backgroundColor: string | null;\n    backgroundImage: string | null;\n    backgroundOrigin: string | null;\n    backgroundPosition: string | null;\n    backgroundPositionX: string | null;\n    backgroundPositionY: string | null;\n    backgroundRepeat: string | null;\n    backgroundSize: string | null;\n}\nexport class ShareBackgroundComponent implements OnInit {\n     props: FormGroup;\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() { }\n/**\n * @param {?} e\n * @return {?}\n */\nbackgroundImageChange(e: any) {\n        this.props.get('background-image').setValue(`url(${e.target.value})`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'share-background',\n    template: `\n      <div class=\"row\" [formGroup]=\"props\">\n          <input type=\"text\" (change)=\"backgroundImageChange($event)\" [attr.value]=\"props.get('background-image').value\">\n          <input type=\"text\" [formControlName]=\"'background-size'\">\n          <input type=\"text\" [formControlName]=\"'background-repeat'\">\n          <input type=\"text\" [formControlName]=\"'background-position'\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'props': [{ type: Input },],\n};\n}\n\nfunction ShareBackgroundComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nShareBackgroundComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nShareBackgroundComponent.ctorParameters;\n/** @type {?} */\nShareBackgroundComponent.propDecorators;\n/** @type {?} */\nShareBackgroundComponent.prototype.props;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ShareColorComponent } from './color/color';\nimport { ShareSizeComponent } from './size/size';\nimport { ShareBackgroundComponent } from './background/background';\n\n\n\nexport const /** @type {?} */ shareComponents = [\n    ShareColorComponent,\n    ShareSizeComponent,\n    ShareBackgroundComponent\n];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgComponentDirective, DRAG_DROP_ALL } from './ng-component';\nimport { DESIGN_LIBRARYS, DesignLibraryService, DesignApiService, DesignPropsService } from './types';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { shareComponents } from './components/public_api';\nexport class IDesignComponentModule {\n/**\n * @param {?} coms\n * @param {?=} dragDropAll\n * @return {?}\n */\npublic static forRoot(coms: any, dragDropAll: boolean = false): ModuleWithProviders {\n        return {\n            ngModule: IDesignComponentModule,\n            providers: [{\n                provide: DESIGN_LIBRARYS,\n                useValue: coms,\n                multi: true\n            },{\n                provide: DRAG_DROP_ALL,\n                useValue: dragDropAll\n            }]\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        NgComponentDirective,\n        ...shareComponents\n    ],\n    declarations: [\n        NgComponentDirective,\n        ...shareComponents\n    ],\n    providers: [\n        DesignApiService,\n        DesignLibraryService,\n        DesignPropsService\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["guid","S4","Math","random","toString","substring","flatten","arr","Array","prototype","concat","apply","DESIGN_LIBRARYS","InjectionToken","instancesMap","Map","InstanceComponent","props","instance","this","DesignApiService","get","id","save","designLibraryProp","isPreview","map","instanceComponent","view","setting","set","decorators","type","Injectable","ctorParameters","DESIGN_COMPONENTS","DesignPropsService","library","pageProps","fathersProps","historyKey","historys","removePosition","backToHistory","err","localStorage","clear","Object","defineProperty","_settingProps","val","_this","fathers","getFather","settingProps","length","res","getPropsByUid","push","setActiveSettingProps","console","log","removeClass","addClass","getPropsByName","name","com","forEach","item","addPropByName","father","deepCopyCom","deepCopy","uuid","lib","default","updateHistory","addPropsToInstanceByName","deepProps","children","toFatherProps","obj","JSON","parse","stringify","dir","isGuid","indexOf","trimGuid","replace","removePropsByUid","index","splice","ids","data","i","getHistory","local","getItem","unshift","Date","toISOString","setItem","undefined","Inject","args","DesignLibraryService","components","DRAG_DROP_ALL","NgComponentDirective","_viewContainerRef","_template","differs","librarys","api","render","dragDropAll","instances","viewContainerRef","ngDoCheck","_differ","changes","diff","ngComponent","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","createComponent","remove","move","designLibraryProp_1","component","libs","ngComponentPreview","elInjector","parentInjector","componentFactory","moduleRef","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","instance_1","state","onClick","subscribe","ev","stopPropagation","setClass","ngComponentClass","setStyle","ngComponentStyle","ngComponentInstance","ngComponentDrag","setDrage","ngComponentDrop","ngOnChanges","value","currentValue","find","create","setAttribute","draggable","ele","nativeElement","fromEvent","dataTransfer","setData","setDrop","preventDefault","getData","getInstanceProps","removeStyle","Directive","selector","ViewContainerRef","TemplateRef","IterableDiffers","Renderer2","propDecorators","Input","ngComponentState","ngComponentClick","ShareColorComponent","ngOnInit","Component","template","styles","ShareSizeComponent","unit","ShareBackgroundComponent","backgroundImageChange","e","setValue","target","shareComponents","IDesignComponentModule","forRoot","coms","ngModule","providers","provide","useValue","multi","NgModule","imports","CommonModule","ReactiveFormsModule","exports","declarations"],"mappings":"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"}

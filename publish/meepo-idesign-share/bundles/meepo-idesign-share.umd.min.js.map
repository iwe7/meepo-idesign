{"version":3,"file":"meepo-idesign-share.umd.min.js","sources":["~/meepo-idesign-share/types.ts","~/meepo-idesign-share/ng-component.ts","~/meepo-idesign-share/design-share.module.ts"],"sourcesContent":["import { Type, Injector, NgModuleFactory } from '@angular/core';\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n// 页面组件结构\nexport interface DesignLibraryProp {\n    children: DesignLibraryProp[];\n    name: string;\n    uuid?: string;\n    props: any,\n    state?: any,\n    title: string;\n}\n// 历史记录结构\nexport interface DesignHistoryProp {\n    name: string;\n    data: DesignLibraryProp[];\n}\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nexport const /** @type {?} */ DESIGN_LIBRARYS = new InjectionToken('DESIGN_LIBRARYS');\nexport class DesignApiService {\nconstructor() { }\n/**\n * @param {?} id\n * @return {?}\n */\nget(id: string) { }\n/**\n * @param {?} data\n * @param {?} id\n * @return {?}\n */\nsave(data: any, id: string) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DesignApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignApiService.ctorParameters;\n}\n\nexport class DesignLibraryService {\nprivate components: { [key: string]: Type<any> }[] = [];\n/**\n * @param {?} components\n */\nconstructor(\n         components: any\n    ) {\n        this.components = flatten(components);\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string) {\n        let /** @type {?} */ com: any;\n        this.components.map(item => {\n            if (item[name]) {\n                com = item[name];\n            }\n        });\n        return com;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DESIGN_LIBRARYS, ] }, ]},\n];\n}\n\nfunction DesignLibraryService_tsickle_Closure_declarations() {\n/** @type {?} */\nDesignLibraryService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDesignLibraryService.ctorParameters;\n/** @type {?} */\nDesignLibraryService.prototype.components;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory,\n    HostListener, EventEmitter, TemplateRef,\n    IterableDiffers, NgIterable, IterableDiffer, IterableChangeRecord,\n    IterableChanges\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { DesignLibraryProp, DesignLibraryService } from './types';\nimport { KeyValueChanges } from '@angular/core';\nexport class NgComponentDirective implements OnChanges {\n    viewContainerRef: ViewContainerRef;\n    componentRef: ComponentRef<ReactComponent<any, any>>;\n    moduleRef: any;\n    // 组件列表\n     ngComponent: NgIterable<DesignLibraryProp>;\n    // 是否预览\n     ngComponentPreview: boolean;\n    // state\n     ngComponentState: any;\n    // class\n     ngComponentClass: any;\n    // style\n     ngComponentStyle: any;\n    // 是否可以拖拽\n     ngComponentDrag: any;\n    // 是否可以放置\n     ngComponentDrop: any;\n\n     ngComponentClick: (sm: any) => {};\n\n    instances: any[] = [];\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _template\n * @param {?} differs\n * @param {?} librarys\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _template: TemplateRef<any>,\nprivate differs: IterableDiffers,\nprivate librarys: DesignLibraryService\n    ) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this.ngComponent);\n            if (changes) {\n                changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n                    if (item.previousIndex == null) {\n                        this.createComponent(item, currentIndex);\n                    } else if (currentIndex == null) {\n                        this._viewContainerRef.remove(adjustedPreviousIndex);\n                    } else {\n                        const /** @type {?} */ view = /** @type {?} */(( this._viewContainerRef.get(adjustedPreviousIndex)));\n                        this._viewContainerRef.move(view, currentIndex);\n                    }\n                });\n            }\n        }\n    }\n/**\n * @param {?} item\n * @param {?} currentIndex\n * @return {?}\n */\nprivate createComponent(item: IterableChangeRecord<DesignLibraryProp>, currentIndex) {\n        try {\n            const /** @type {?} */ designLibraryProp: DesignLibraryProp = item.item;\n            let /** @type {?} */ component: Type<any>;\n            const /** @type {?} */ libs = this.librarys.get(designLibraryProp.name);\n            if (this.ngComponentPreview) {\n                component = libs.view;\n            } else {\n                component = libs.setting;\n            }\n            const /** @type {?} */ elInjector = this.viewContainerRef.parentInjector;\n            const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            const /** @type {?} */ componentFactory: ComponentFactory<any> =\n                componentFactoryResolver.resolveComponentFactory(component);\n            const /** @type {?} */ componentRef = this.viewContainerRef.createComponent(\n                componentFactory,\n                currentIndex,\n                elInjector\n            );\n            // designLibraryProp.props = JSON.parse(JSON.stringify(designLibraryProp.props));\n            componentRef.instance.props = designLibraryProp.props;\n            componentRef.instance.onClick.subscribe(res => {\n                this.ngComponentClick && this.ngComponentClick(designLibraryProp)\n            });\n            componentRef.instance.setClass(this.ngComponentClass);\n            componentRef.instance.setStyle(this.ngComponentStyle);\n            this.setDrage(componentRef.instance);\n            this.setDrop(componentRef.instance);\n            designLibraryProp.uuid = componentRef.instance.guid;\n            const /** @type {?} */ instanceComponent = new InstanceComponent(componentRef.instance.guid, designLibraryProp);\n            this.instances.push(instanceComponent);\n        } catch ( /** @type {?} */err) { }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        if ('ngComponent' in changes) {\n            const /** @type {?} */ value = changes['ngComponent'].currentValue;\n            if (value && !this._differ) {\n                try {\n                    this._differ = this.differs.find(value).create()\n                } catch ( /** @type {?} */err) { }\n            }\n        }\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrage(instance: ReactComponent<any, any>) {\n        instance.setAttribute({\n            draggable: true\n        });\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        let /** @type {?} */ uuid: string;\n        fromEvent(ele, 'dragstart').subscribe((ev: DragEvent) => {\n            uuid = instance.guid;\n            ev.dataTransfer.setData(\"name\", instance.guid);\n        });\n        fromEvent(ele, 'dragleave').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n        });\n        fromEvent(ele, 'dragend').subscribe((ev: DragEvent) => {\n            // dragend 删除这一个\n            // this.history.removeComponentByUuid(uuid);\n        });\n    }\n/**\n * @param {?} instance\n * @return {?}\n */\nprivate setDrop(instance: ReactComponent<any, any>) {\n        const /** @type {?} */ ele = instance.ele.nativeElement;\n        fromEvent(ele, 'drop').subscribe((ev: DragEvent) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var /** @type {?} */ data = ev.dataTransfer.getData(\"name\");\n            if (instance.guid !== data) {\n                // 自己放置自己 忽略 否则提示是放入内部还是互换位置\n                let /** @type {?} */ props = this.getInstanceProps(data);\n                if (props) {\n                    instance.props.children.push(props);\n                }\n            }\n        });\n        fromEvent(ele, 'dragover').subscribe((ev: DragEvent) => {\n            ele.style.bor\n            ev.preventDefault();\n            ev.stopPropagation();\n        });\n    }\n/**\n * @param {?} uuid\n * @return {?}\n */\nprivate getInstanceProps(uuid: string) {\n        let /** @type {?} */ props: DesignLibraryProp;\n        this.instances.map(res => {\n            if (res.guid === uuid) {\n                props = res.props;\n            }\n        });\n        return props;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[ngComponent]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: DesignLibraryService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponent': [{ type: Input },],\n'ngComponentPreview': [{ type: Input },],\n'ngComponentState': [{ type: Input },],\n'ngComponentClass': [{ type: Input },],\n'ngComponentStyle': [{ type: Input },],\n'ngComponentDrag': [{ type: Input },],\n'ngComponentDrop': [{ type: Input },],\n'ngComponentClick': [{ type: Input },],\n};\n}\n\nfunction NgComponentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentDirective.ctorParameters;\n/** @type {?} */\nNgComponentDirective.propDecorators;\n/** @type {?} */\nNgComponentDirective.prototype.viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype.componentRef;\n/** @type {?} */\nNgComponentDirective.prototype.moduleRef;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponent;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentPreview;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentState;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClass;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentStyle;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrag;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentDrop;\n/** @type {?} */\nNgComponentDirective.prototype.ngComponentClick;\n/** @type {?} */\nNgComponentDirective.prototype.instances;\n/** @type {?} */\nNgComponentDirective.prototype._differ;\n/** @type {?} */\nNgComponentDirective.prototype._viewContainerRef;\n/** @type {?} */\nNgComponentDirective.prototype._template;\n/** @type {?} */\nNgComponentDirective.prototype.differs;\n/** @type {?} */\nNgComponentDirective.prototype.librarys;\n}\n\nexport class InstanceComponent {\n/**\n * @param {?} guid\n * @param {?} props\n */\nconstructor(\npublic guid: string,\npublic props: DesignLibraryProp\n    ) { }\n}\n\nfunction InstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInstanceComponent.prototype.guid;\n/** @type {?} */\nInstanceComponent.prototype.props;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { NgComponentDirective } from './ng-component';\nexport class IDesignComponentModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        NgComponentDirective\n    ],\n    declarations: [\n        NgComponentDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IDesignComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIDesignComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIDesignComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["DESIGN_LIBRARYS","InjectionToken","DesignApiService","prototype","get","id","save","data","decorators","type","Injectable","ctorParameters","DesignLibraryService","components","arr","this","Array","concat","apply","name","com","map","item","undefined","Inject","args","NgComponentDirective","_viewContainerRef","_template","differs","librarys","instances","viewContainerRef","ngDoCheck","_this","_differ","changes","diff","ngComponent","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","createComponent","remove","view","move","designLibraryProp_1","component","libs","ngComponentPreview","setting","elInjector","parentInjector","componentFactory","moduleRef","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","componentRef","instance","props","onClick","subscribe","res","ngComponentClick","setClass","ngComponentClass","setStyle","ngComponentStyle","setDrage","setDrop","uuid","guid","instanceComponent","InstanceComponent","push","err","ngOnChanges","clear","value","currentValue","find","create","setAttribute","draggable","ele","nativeElement","fromEvent","ev","dataTransfer","setData","preventDefault","stopPropagation","getData","getInstanceProps","children","style","bor","Directive","selector","ViewContainerRef","TemplateRef","IterableDiffers","propDecorators","Input","ngComponentState","ngComponentDrag","ngComponentDrop","IDesignComponentModule","NgModule","imports","exports","declarations","providers"],"mappings":"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"}
